/*
 * generated by Xtext 2.12.0
 */
package de.evorepair.feature.expression.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.evorepair.feature.expression.ide.contentassist.antlr.internal.InternalExpressionDslParser;
import de.evorepair.feature.expression.services.ExpressionDslGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ExpressionDslParser extends AbstractContentAssistParser {

	@Inject
	private ExpressionDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalExpressionDslParser createParser() {
		InternalExpressionDslParser result = new InternalExpressionDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEvoTerminalAccess().getAlternatives(), "rule__EvoTerminal__Alternatives");
					put(grammarAccess.getEvoVersionRestrictionAccess().getAlternatives(), "rule__EvoVersionRestriction__Alternatives");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getAlternatives(), "rule__EvoVersionRangeRestriction__Alternatives");
					put(grammarAccess.getEvoValueAccess().getAlternatives(), "rule__EvoValue__Alternatives");
					put(grammarAccess.getEvoBooleanValueAccess().getAlternatives_1(), "rule__EvoBooleanValue__Alternatives_1");
					put(grammarAccess.getEvoEnumLiteralAccess().getAlternatives_5_1(), "rule__EvoEnumLiteral__Alternatives_5_1");
					put(grammarAccess.getEvoBooleanValueExpressionAccess().getAlternatives_1(), "rule__EvoBooleanValueExpression__Alternatives_1");
					put(grammarAccess.getEvoUnequalSizeAccess().getAlternatives(), "rule__EvoUnequalSize__Alternatives");
					put(grammarAccess.getEvoImplicationSizeAccess().getAlternatives(), "rule__EvoImplicationSize__Alternatives");
					put(grammarAccess.getEvoBiconditionalSizeAccess().getAlternatives(), "rule__EvoBiconditionalSize__Alternatives");
					put(grammarAccess.getEvoSetInclusionSizeAccess().getAlternatives(), "rule__EvoSetInclusionSize__Alternatives");
					put(grammarAccess.getEvoSetCardinalityAccess().getAlternatives_1(), "rule__EvoSetCardinality__Alternatives_1");
					put(grammarAccess.getEvoSatisfiableAccess().getVariablesAlternatives_3_0(), "rule__EvoSatisfiable__VariablesAlternatives_3_0");
					put(grammarAccess.getEvoSatisfiableAccess().getVariablesAlternatives_4_1_0(), "rule__EvoSatisfiable__VariablesAlternatives_4_1_0");
					put(grammarAccess.getEvoSetVariableAccess().getAlternatives(), "rule__EvoSetVariable__Alternatives");
					put(grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getAlternatives(), "rule__EvoRelativeVersionRestrictionOperator__Alternatives");
					put(grammarAccess.getEvoVariableTypeAccess().getAlternatives(), "rule__EvoVariableType__Alternatives");
					put(grammarAccess.getHyFeatureTypeEnumAccess().getAlternatives(), "rule__HyFeatureTypeEnum__Alternatives");
					put(grammarAccess.getHyGroupTypeEnumAccess().getAlternatives(), "rule__HyGroupTypeEnum__Alternatives");
					put(grammarAccess.getEvoElementOfAccess().getGroup(), "rule__EvoElementOf__Group__0");
					put(grammarAccess.getEvoElementOfAccess().getGroup_1(), "rule__EvoElementOf__Group_1__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getEvoNestedExpressionAccess().getGroup(), "rule__EvoNestedExpression__Group__0");
					put(grammarAccess.getEvoImplicationAccess().getGroup(), "rule__EvoImplication__Group__0");
					put(grammarAccess.getEvoImplicationAccess().getGroup_1(), "rule__EvoImplication__Group_1__0");
					put(grammarAccess.getEvoEquivalenceExpressionAccess().getGroup(), "rule__EvoEquivalenceExpression__Group__0");
					put(grammarAccess.getEvoNegationAccess().getGroup(), "rule__EvoNegation__Group__0");
					put(grammarAccess.getEvoConditionalFeatureReferenceExpressionAccess().getGroup(), "rule__EvoConditionalFeatureReferenceExpression__Group__0");
					put(grammarAccess.getEvoRelativeVersionRestrictionAccess().getGroup(), "rule__EvoRelativeVersionRestriction__Group__0");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getGroup_0(), "rule__EvoVersionRangeRestriction__Group_0__0");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getGroup_1(), "rule__EvoVersionRangeRestriction__Group_1__0");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getGroup_2(), "rule__EvoVersionRangeRestriction__Group_2__0");
					put(grammarAccess.getEvoContextInformationReferenceExpressionAccess().getGroup(), "rule__EvoContextInformationReferenceExpression__Group__0");
					put(grammarAccess.getEvoAttributeReferenceExpressionAccess().getGroup(), "rule__EvoAttributeReferenceExpression__Group__0");
					put(grammarAccess.getEvoBooleanValueAccess().getGroup(), "rule__EvoBooleanValue__Group__0");
					put(grammarAccess.getEvoEnumValueAccess().getGroup(), "rule__EvoEnumValue__Group__0");
					put(grammarAccess.getEvoEnumAccess().getGroup(), "rule__EvoEnum__Group__0");
					put(grammarAccess.getEvoEnumAccess().getGroup_3(), "rule__EvoEnum__Group_3__0");
					put(grammarAccess.getEvoEnumAccess().getGroup_3_1(), "rule__EvoEnum__Group_3_1__0");
					put(grammarAccess.getEvoEnumLiteralAccess().getGroup(), "rule__EvoEnumLiteral__Group__0");
					put(grammarAccess.getEvoEnumLiteralAccess().getGroup_5(), "rule__EvoEnumLiteral__Group_5__0");
					put(grammarAccess.getEvoEnumLiteralAccess().getGroup_5_1_0(), "rule__EvoEnumLiteral__Group_5_1_0__0");
					put(grammarAccess.getEvoEnumLiteralAccess().getGroup_5_1_1(), "rule__EvoEnumLiteral__Group_5_1_1__0");
					put(grammarAccess.getEvoEnumLiteralAccess().getGroup_5_1_2(), "rule__EvoEnumLiteral__Group_5_1_2__0");
					put(grammarAccess.getEvoBooleanValueExpressionAccess().getGroup(), "rule__EvoBooleanValueExpression__Group__0");
					put(grammarAccess.getEvoMimumumExpressionAccess().getGroup(), "rule__EvoMimumumExpression__Group__0");
					put(grammarAccess.getEvoMaximumExpressionAccess().getGroup(), "rule__EvoMaximumExpression__Group__0");
					put(grammarAccess.getEvoIfPossibleExpressionAccess().getGroup(), "rule__EvoIfPossibleExpression__Group__0");
					put(grammarAccess.getEvoIfPossibleExpressionAccess().getGroup_2(), "rule__EvoIfPossibleExpression__Group_2__0");
					put(grammarAccess.getEvoLessExpressionAccess().getGroup(), "rule__EvoLessExpression__Group__0");
					put(grammarAccess.getEvoLessOrEqualExpressionAccess().getGroup(), "rule__EvoLessOrEqualExpression__Group__0");
					put(grammarAccess.getEvoGreaterExpressionAccess().getGroup(), "rule__EvoGreaterExpression__Group__0");
					put(grammarAccess.getEvoGreaterOrEqualExpressionAccess().getGroup(), "rule__EvoGreaterOrEqualExpression__Group__0");
					put(grammarAccess.getEvoSubtractionExpressionAccess().getGroup(), "rule__EvoSubtractionExpression__Group__0");
					put(grammarAccess.getEvoAdditionExpressionAccess().getGroup(), "rule__EvoAdditionExpression__Group__0");
					put(grammarAccess.getEvoModuloExpressionAccess().getGroup(), "rule__EvoModuloExpression__Group__0");
					put(grammarAccess.getEvoMultiplicationExpressionAccess().getGroup(), "rule__EvoMultiplicationExpression__Group__0");
					put(grammarAccess.getEvoDivisionExpressionAccess().getGroup(), "rule__EvoDivisionExpression__Group__0");
					put(grammarAccess.getEvoFormulaAccess().getGroup(), "rule__EvoFormula__Group__0");
					put(grammarAccess.getEvoXOrAccess().getGroup(), "rule__EvoXOr__Group__0");
					put(grammarAccess.getEvoXOrAccess().getGroup_1(), "rule__EvoXOr__Group_1__0");
					put(grammarAccess.getEvoOrAccess().getGroup(), "rule__EvoOr__Group__0");
					put(grammarAccess.getEvoOrAccess().getGroup_1(), "rule__EvoOr__Group_1__0");
					put(grammarAccess.getEvoAndAccess().getGroup(), "rule__EvoAnd__Group__0");
					put(grammarAccess.getEvoAndAccess().getGroup_1(), "rule__EvoAnd__Group_1__0");
					put(grammarAccess.getEvoEqualAccess().getGroup(), "rule__EvoEqual__Group__0");
					put(grammarAccess.getEvoEqualAccess().getGroup_1(), "rule__EvoEqual__Group_1__0");
					put(grammarAccess.getEvoUnequalAccess().getGroup(), "rule__EvoUnequal__Group__0");
					put(grammarAccess.getEvoUnequalAccess().getGroup_1(), "rule__EvoUnequal__Group_1__0");
					put(grammarAccess.getEvoBiconditionalAccess().getGroup(), "rule__EvoBiconditional__Group__0");
					put(grammarAccess.getEvoBiconditionalAccess().getGroup_1(), "rule__EvoBiconditional__Group_1__0");
					put(grammarAccess.getEvoSetInclusionAccess().getGroup(), "rule__EvoSetInclusion__Group__0");
					put(grammarAccess.getEvoSetInclusionAccess().getGroup_1(), "rule__EvoSetInclusion__Group_1__0");
					put(grammarAccess.getEvoSetIntersectionAccess().getGroup(), "rule__EvoSetIntersection__Group__0");
					put(grammarAccess.getEvoSetIntersectionAccess().getGroup_1(), "rule__EvoSetIntersection__Group_1__0");
					put(grammarAccess.getEvoSetUnionAccess().getGroup(), "rule__EvoSetUnion__Group__0");
					put(grammarAccess.getEvoSetUnionAccess().getGroup_1(), "rule__EvoSetUnion__Group_1__0");
					put(grammarAccess.getEvoSetDifferenceAccess().getGroup(), "rule__EvoSetDifference__Group__0");
					put(grammarAccess.getEvoSetDifferenceAccess().getGroup_1(), "rule__EvoSetDifference__Group_1__0");
					put(grammarAccess.getEvoSetSymmetricDifferenceAccess().getGroup(), "rule__EvoSetSymmetricDifference__Group__0");
					put(grammarAccess.getEvoSetSymmetricDifferenceAccess().getGroup_1(), "rule__EvoSetSymmetricDifference__Group_1__0");
					put(grammarAccess.getEvoSetCartesianProductAccess().getGroup(), "rule__EvoSetCartesianProduct__Group__0");
					put(grammarAccess.getEvoSetCartesianProductAccess().getGroup_1(), "rule__EvoSetCartesianProduct__Group_1__0");
					put(grammarAccess.getEvoSetCardinalityAccess().getGroup(), "rule__EvoSetCardinality__Group__0");
					put(grammarAccess.getEvoSetCardinalityAccess().getGroup_1_0(), "rule__EvoSetCardinality__Group_1_0__0");
					put(grammarAccess.getEvoSetCardinalityAccess().getGroup_1_1(), "rule__EvoSetCardinality__Group_1_1__0");
					put(grammarAccess.getEvoFeatureVariableAccess().getGroup(), "rule__EvoFeatureVariable__Group__0");
					put(grammarAccess.getEvoForAllAccess().getGroup(), "rule__EvoForAll__Group__0");
					put(grammarAccess.getEvoForAllAccess().getGroup_3(), "rule__EvoForAll__Group_3__0");
					put(grammarAccess.getEvoExistsAccess().getGroup(), "rule__EvoExists__Group__0");
					put(grammarAccess.getEvoNotAccess().getGroup(), "rule__EvoNot__Group__0");
					put(grammarAccess.getEvoSatisfiableAccess().getGroup(), "rule__EvoSatisfiable__Group__0");
					put(grammarAccess.getEvoSatisfiableAccess().getGroup_4(), "rule__EvoSatisfiable__Group_4__0");
					put(grammarAccess.getEvoSizeAccess().getGroup(), "rule__EvoSize__Group__0");
					put(grammarAccess.getEvoVariableTermAccess().getGroup(), "rule__EvoVariableTerm__Group__0");
					put(grammarAccess.getEvoApplicationConstraintTermAccess().getGroup(), "rule__EvoApplicationConstraintTerm__Group__0");
					put(grammarAccess.getEvoFeatureTypeAccess().getGroup(), "rule__EvoFeatureType__Group__0");
					put(grammarAccess.getEvoFeatureTypeAccess().getGroup_2(), "rule__EvoFeatureType__Group_2__0");
					put(grammarAccess.getEvoFeatureTypeAccess().getGroup_2_2(), "rule__EvoFeatureType__Group_2_2__0");
					put(grammarAccess.getEvoGroupTypeAccess().getGroup(), "rule__EvoGroupType__Group__0");
					put(grammarAccess.getEvoGroupTypeAccess().getGroup_2(), "rule__EvoGroupType__Group_2__0");
					put(grammarAccess.getEvoGroupTypeAccess().getGroup_2_2(), "rule__EvoGroupType__Group_2_2__0");
					put(grammarAccess.getEvoGroupTermAccess().getGroup(), "rule__EvoGroupTerm__Group__0");
					put(grammarAccess.getEvoSetTermAccess().getGroup(), "rule__EvoSetTerm__Group__0");
					put(grammarAccess.getEvoSetTermAccess().getGroup_2(), "rule__EvoSetTerm__Group_2__0");
					put(grammarAccess.getEvoParentOfAccess().getGroup(), "rule__EvoParentOf__Group__0");
					put(grammarAccess.getEvoSiblingsOfAccess().getGroup(), "rule__EvoSiblingsOf__Group__0");
					put(grammarAccess.getEvoChildrenOfAccess().getGroup(), "rule__EvoChildrenOf__Group__0");
					put(grammarAccess.getGrammarEntryAccess().getExpressionAssignment(), "rule__GrammarEntry__ExpressionAssignment");
					put(grammarAccess.getEvoElementOfAccess().getOperand2Assignment_1_2(), "rule__EvoElementOf__Operand2Assignment_1_2");
					put(grammarAccess.getEvoNestedExpressionAccess().getOperandAssignment_1(), "rule__EvoNestedExpression__OperandAssignment_1");
					put(grammarAccess.getEvoImplicationAccess().getOperand2Assignment_1_2(), "rule__EvoImplication__Operand2Assignment_1_2");
					put(grammarAccess.getEvoEquivalenceExpressionAccess().getOperand1Assignment_0(), "rule__EvoEquivalenceExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoEquivalenceExpressionAccess().getOperand2Assignment_2(), "rule__EvoEquivalenceExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoNegationAccess().getOperandAssignment_1(), "rule__EvoNegation__OperandAssignment_1");
					put(grammarAccess.getEvoFeatureReferenceExpressionAccess().getFeatureAssignment(), "rule__EvoFeatureReferenceExpression__FeatureAssignment");
					put(grammarAccess.getEvoConditionalFeatureReferenceExpressionAccess().getFeatureAssignment_1(), "rule__EvoConditionalFeatureReferenceExpression__FeatureAssignment_1");
					put(grammarAccess.getEvoConditionalFeatureReferenceExpressionAccess().getVersionRestrictionAssignment_2(), "rule__EvoConditionalFeatureReferenceExpression__VersionRestrictionAssignment_2");
					put(grammarAccess.getEvoRelativeVersionRestrictionAccess().getOperatorAssignment_1(), "rule__EvoRelativeVersionRestriction__OperatorAssignment_1");
					put(grammarAccess.getEvoRelativeVersionRestrictionAccess().getVersionAssignment_2(), "rule__EvoRelativeVersionRestriction__VersionAssignment_2");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getLowerIncludedAssignment_0_1(), "rule__EvoVersionRangeRestriction__LowerIncludedAssignment_0_1");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getLowerVersionAssignment_1_1(), "rule__EvoVersionRangeRestriction__LowerVersionAssignment_1_1");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getUpperIncludedAssignment_1_3(), "rule__EvoVersionRangeRestriction__UpperIncludedAssignment_1_3");
					put(grammarAccess.getEvoVersionRangeRestrictionAccess().getUpperVersionAssignment_2_1(), "rule__EvoVersionRangeRestriction__UpperVersionAssignment_2_1");
					put(grammarAccess.getEvoContextInformationReferenceExpressionAccess().getContextInformationAssignment_1(), "rule__EvoContextInformationReferenceExpression__ContextInformationAssignment_1");
					put(grammarAccess.getEvoAttributeReferenceExpressionAccess().getFeatureAssignment_0(), "rule__EvoAttributeReferenceExpression__FeatureAssignment_0");
					put(grammarAccess.getEvoAttributeReferenceExpressionAccess().getAttributeAssignment_2(), "rule__EvoAttributeReferenceExpression__AttributeAssignment_2");
					put(grammarAccess.getEvoValueExpressionAccess().getValueAssignment(), "rule__EvoValueExpression__ValueAssignment");
					put(grammarAccess.getEvoNumberValueAccess().getValueAssignment(), "rule__EvoNumberValue__ValueAssignment");
					put(grammarAccess.getEvoBooleanValueAccess().getValueAssignment_1_0(), "rule__EvoBooleanValue__ValueAssignment_1_0");
					put(grammarAccess.getEvoEnumValueAccess().getEnumAssignment_1(), "rule__EvoEnumValue__EnumAssignment_1");
					put(grammarAccess.getEvoEnumValueAccess().getEnumLiteralAssignment_3(), "rule__EvoEnumValue__EnumLiteralAssignment_3");
					put(grammarAccess.getEvoEnumAccess().getNameAssignment_1(), "rule__EvoEnum__NameAssignment_1");
					put(grammarAccess.getEvoEnumAccess().getLiteralsAssignment_3_0(), "rule__EvoEnum__LiteralsAssignment_3_0");
					put(grammarAccess.getEvoEnumAccess().getLiteralsAssignment_3_1_1(), "rule__EvoEnum__LiteralsAssignment_3_1_1");
					put(grammarAccess.getEvoEnumLiteralAccess().getNameAssignment_1(), "rule__EvoEnumLiteral__NameAssignment_1");
					put(grammarAccess.getEvoEnumLiteralAccess().getValueAssignment_3(), "rule__EvoEnumLiteral__ValueAssignment_3");
					put(grammarAccess.getEvoEnumLiteralAccess().getValidSinceAssignment_5_1_0_0(), "rule__EvoEnumLiteral__ValidSinceAssignment_5_1_0_0");
					put(grammarAccess.getEvoEnumLiteralAccess().getValidUntilAssignment_5_1_0_2(), "rule__EvoEnumLiteral__ValidUntilAssignment_5_1_0_2");
					put(grammarAccess.getEvoEnumLiteralAccess().getValidSinceAssignment_5_1_1_0(), "rule__EvoEnumLiteral__ValidSinceAssignment_5_1_1_0");
					put(grammarAccess.getEvoEnumLiteralAccess().getValidUntilAssignment_5_1_2_2(), "rule__EvoEnumLiteral__ValidUntilAssignment_5_1_2_2");
					put(grammarAccess.getEvoBooleanValueExpressionAccess().getValueAssignment_1_0(), "rule__EvoBooleanValueExpression__ValueAssignment_1_0");
					put(grammarAccess.getEvoMimumumExpressionAccess().getOperandAssignment_1(), "rule__EvoMimumumExpression__OperandAssignment_1");
					put(grammarAccess.getEvoMaximumExpressionAccess().getOperandAssignment_1(), "rule__EvoMaximumExpression__OperandAssignment_1");
					put(grammarAccess.getEvoIfPossibleExpressionAccess().getOperandsAssignment_1(), "rule__EvoIfPossibleExpression__OperandsAssignment_1");
					put(grammarAccess.getEvoIfPossibleExpressionAccess().getOperandsAssignment_2_1(), "rule__EvoIfPossibleExpression__OperandsAssignment_2_1");
					put(grammarAccess.getEvoLessExpressionAccess().getOperand1Assignment_0(), "rule__EvoLessExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoLessExpressionAccess().getOperand2Assignment_2(), "rule__EvoLessExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoLessOrEqualExpressionAccess().getOperand1Assignment_0(), "rule__EvoLessOrEqualExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoLessOrEqualExpressionAccess().getOperand2Assignment_2(), "rule__EvoLessOrEqualExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoGreaterExpressionAccess().getOperand1Assignment_0(), "rule__EvoGreaterExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoGreaterExpressionAccess().getOperand2Assignment_2(), "rule__EvoGreaterExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoGreaterOrEqualExpressionAccess().getOperand1Assignment_0(), "rule__EvoGreaterOrEqualExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoGreaterOrEqualExpressionAccess().getOperand2Assignment_2(), "rule__EvoGreaterOrEqualExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoSubtractionExpressionAccess().getOperand1Assignment_0(), "rule__EvoSubtractionExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoSubtractionExpressionAccess().getOperand2Assignment_2(), "rule__EvoSubtractionExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoAdditionExpressionAccess().getOperand1Assignment_0(), "rule__EvoAdditionExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoAdditionExpressionAccess().getOperand2Assignment_2(), "rule__EvoAdditionExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoModuloExpressionAccess().getOperand1Assignment_0(), "rule__EvoModuloExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoModuloExpressionAccess().getOperand2Assignment_2(), "rule__EvoModuloExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoMultiplicationExpressionAccess().getOperand1Assignment_0(), "rule__EvoMultiplicationExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoMultiplicationExpressionAccess().getOperand2Assignment_2(), "rule__EvoMultiplicationExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoDivisionExpressionAccess().getOperand1Assignment_0(), "rule__EvoDivisionExpression__Operand1Assignment_0");
					put(grammarAccess.getEvoDivisionExpressionAccess().getOperand2Assignment_2(), "rule__EvoDivisionExpression__Operand2Assignment_2");
					put(grammarAccess.getEvoFormulaAccess().getTermAssignment_4(), "rule__EvoFormula__TermAssignment_4");
					put(grammarAccess.getEvoXOrAccess().getOperand2Assignment_1_2(), "rule__EvoXOr__Operand2Assignment_1_2");
					put(grammarAccess.getEvoOrAccess().getOperand2Assignment_1_2(), "rule__EvoOr__Operand2Assignment_1_2");
					put(grammarAccess.getEvoAndAccess().getOperand2Assignment_1_2(), "rule__EvoAnd__Operand2Assignment_1_2");
					put(grammarAccess.getEvoEqualAccess().getOperand2Assignment_1_2(), "rule__EvoEqual__Operand2Assignment_1_2");
					put(grammarAccess.getEvoUnequalAccess().getOperand2Assignment_1_2(), "rule__EvoUnequal__Operand2Assignment_1_2");
					put(grammarAccess.getEvoBiconditionalAccess().getOperand2Assignment_1_2(), "rule__EvoBiconditional__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetInclusionAccess().getOperand2Assignment_1_2(), "rule__EvoSetInclusion__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetIntersectionAccess().getOperand2Assignment_1_2(), "rule__EvoSetIntersection__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetUnionAccess().getOperand2Assignment_1_2(), "rule__EvoSetUnion__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetDifferenceAccess().getOperand2Assignment_1_2(), "rule__EvoSetDifference__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetSymmetricDifferenceAccess().getOperand2Assignment_1_2(), "rule__EvoSetSymmetricDifference__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetCartesianProductAccess().getOperand2Assignment_1_2(), "rule__EvoSetCartesianProduct__Operand2Assignment_1_2");
					put(grammarAccess.getEvoSetCardinalityAccess().getOperandAssignment_1_0_1(), "rule__EvoSetCardinality__OperandAssignment_1_0_1");
					put(grammarAccess.getEvoSetCardinalityAccess().getOperandAssignment_1_1_2(), "rule__EvoSetCardinality__OperandAssignment_1_1_2");
					put(grammarAccess.getEvoFeatureVariableAccess().getNameAssignment_1(), "rule__EvoFeatureVariable__NameAssignment_1");
					put(grammarAccess.getEvoForAllAccess().getBoundedVariablesAssignment_2(), "rule__EvoForAll__BoundedVariablesAssignment_2");
					put(grammarAccess.getEvoForAllAccess().getBoundedVariablesAssignment_3_1(), "rule__EvoForAll__BoundedVariablesAssignment_3_1");
					put(grammarAccess.getEvoForAllAccess().getOperandAssignment_5(), "rule__EvoForAll__OperandAssignment_5");
					put(grammarAccess.getEvoExistsAccess().getBoundedVariablesAssignment_2(), "rule__EvoExists__BoundedVariablesAssignment_2");
					put(grammarAccess.getEvoExistsAccess().getElementAssignment_4(), "rule__EvoExists__ElementAssignment_4");
					put(grammarAccess.getEvoNotAccess().getOperandAssignment_2(), "rule__EvoNot__OperandAssignment_2");
					put(grammarAccess.getEvoSatisfiableAccess().getVariablesAssignment_3(), "rule__EvoSatisfiable__VariablesAssignment_3");
					put(grammarAccess.getEvoSatisfiableAccess().getVariablesAssignment_4_1(), "rule__EvoSatisfiable__VariablesAssignment_4_1");
					put(grammarAccess.getEvoSizeAccess().getSizeAssignment_1(), "rule__EvoSize__SizeAssignment_1");
					put(grammarAccess.getEvoVariableTermAccess().getVariableAssignment_0(), "rule__EvoVariableTerm__VariableAssignment_0");
					put(grammarAccess.getEvoVariableTermAccess().getTypeAssignment_1(), "rule__EvoVariableTerm__TypeAssignment_1");
					put(grammarAccess.getEvoApplicationConstraintTermAccess().getVariableAssignment_2(), "rule__EvoApplicationConstraintTerm__VariableAssignment_2");
					put(grammarAccess.getEvoFeatureTypeAccess().getVariablesAssignment_2_1(), "rule__EvoFeatureType__VariablesAssignment_2_1");
					put(grammarAccess.getEvoFeatureTypeAccess().getVariablesAssignment_2_2_1(), "rule__EvoFeatureType__VariablesAssignment_2_2_1");
					put(grammarAccess.getEvoFeatureTypeAccess().getTypeAssignment_4(), "rule__EvoFeatureType__TypeAssignment_4");
					put(grammarAccess.getEvoGroupTypeAccess().getVariablesAssignment_2_1(), "rule__EvoGroupType__VariablesAssignment_2_1");
					put(grammarAccess.getEvoGroupTypeAccess().getVariablesAssignment_2_2_1(), "rule__EvoGroupType__VariablesAssignment_2_2_1");
					put(grammarAccess.getEvoGroupTypeAccess().getTypeAssignment_4(), "rule__EvoGroupType__TypeAssignment_4");
					put(grammarAccess.getEvoGroupTermAccess().getVariableAssignment_0(), "rule__EvoGroupTerm__VariableAssignment_0");
					put(grammarAccess.getEvoGroupTermAccess().getTypeAssignment_1(), "rule__EvoGroupTerm__TypeAssignment_1");
					put(grammarAccess.getEvoSetTermAccess().getVariablesAssignment_1(), "rule__EvoSetTerm__VariablesAssignment_1");
					put(grammarAccess.getEvoSetTermAccess().getVariablesAssignment_2_1(), "rule__EvoSetTerm__VariablesAssignment_2_1");
					put(grammarAccess.getEvoParentOfAccess().getVariableAssignment_2(), "rule__EvoParentOf__VariableAssignment_2");
					put(grammarAccess.getEvoSiblingsOfAccess().getVariableAssignment_2(), "rule__EvoSiblingsOf__VariableAssignment_2");
					put(grammarAccess.getEvoChildrenOfAccess().getVariableAssignment_2(), "rule__EvoChildrenOf__VariableAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ExpressionDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ExpressionDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
