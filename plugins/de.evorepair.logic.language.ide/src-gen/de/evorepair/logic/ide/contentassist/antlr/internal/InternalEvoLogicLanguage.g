/*
 * generated by Xtext 2.11.0
 */
grammar InternalEvoLogicLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.evorepair.logic.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.evorepair.logic.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.evorepair.logic.services.EvoLogicLanguageGrammarAccess;

}
@parser::members {
	private EvoLogicLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(EvoLogicLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCommandDocument
entryRuleCommandDocument
:
{ before(grammarAccess.getCommandDocumentRule()); }
	 ruleCommandDocument
{ after(grammarAccess.getCommandDocumentRule()); } 
	 EOF 
;

// Rule CommandDocument
ruleCommandDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandDocumentAccess().getGroup()); }
		(rule__CommandDocument__Group__0)
		{ after(grammarAccess.getCommandDocumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoFormula
entryRuleEvoFormula
:
{ before(grammarAccess.getEvoFormulaRule()); }
	 ruleEvoFormula
{ after(grammarAccess.getEvoFormulaRule()); } 
	 EOF 
;

// Rule EvoFormula
ruleEvoFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoFormulaAccess().getGroup()); }
		(rule__EvoFormula__Group__0)
		{ after(grammarAccess.getEvoFormulaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoVariable
entryRuleEvoVariable
:
{ before(grammarAccess.getEvoVariableRule()); }
	 ruleEvoVariable
{ after(grammarAccess.getEvoVariableRule()); } 
	 EOF 
;

// Rule EvoVariable
ruleEvoVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoVariableAccess().getEvoArbitratyFeatureVariableParserRuleCall()); }
		ruleEvoArbitratyFeatureVariable
		{ after(grammarAccess.getEvoVariableAccess().getEvoArbitratyFeatureVariableParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoVariableTerm
entryRuleEvoVariableTerm
:
{ before(grammarAccess.getEvoVariableTermRule()); }
	 ruleEvoVariableTerm
{ after(grammarAccess.getEvoVariableTermRule()); } 
	 EOF 
;

// Rule EvoVariableTerm
ruleEvoVariableTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoVariableTermAccess().getGroup()); }
		(rule__EvoVariableTerm__Group__0)
		{ after(grammarAccess.getEvoVariableTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoArbitratyFeatureVariable
entryRuleEvoArbitratyFeatureVariable
:
{ before(grammarAccess.getEvoArbitratyFeatureVariableRule()); }
	 ruleEvoArbitratyFeatureVariable
{ after(grammarAccess.getEvoArbitratyFeatureVariableRule()); } 
	 EOF 
;

// Rule EvoArbitratyFeatureVariable
ruleEvoArbitratyFeatureVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoArbitratyFeatureVariableAccess().getGroup()); }
		(rule__EvoArbitratyFeatureVariable__Group__0)
		{ after(grammarAccess.getEvoArbitratyFeatureVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoAbstractTerm
entryRuleEvoAbstractTerm
:
{ before(grammarAccess.getEvoAbstractTermRule()); }
	 ruleEvoAbstractTerm
{ after(grammarAccess.getEvoAbstractTermRule()); } 
	 EOF 
;

// Rule EvoAbstractTerm
ruleEvoAbstractTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoAbstractTermAccess().getEvoOrParserRuleCall()); }
		ruleEvoOr
		{ after(grammarAccess.getEvoAbstractTermAccess().getEvoOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoOr
entryRuleEvoOr
:
{ before(grammarAccess.getEvoOrRule()); }
	 ruleEvoOr
{ after(grammarAccess.getEvoOrRule()); } 
	 EOF 
;

// Rule EvoOr
ruleEvoOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoOrAccess().getGroup()); }
		(rule__EvoOr__Group__0)
		{ after(grammarAccess.getEvoOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoAnd
entryRuleEvoAnd
:
{ before(grammarAccess.getEvoAndRule()); }
	 ruleEvoAnd
{ after(grammarAccess.getEvoAndRule()); } 
	 EOF 
;

// Rule EvoAnd
ruleEvoAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoAndAccess().getGroup()); }
		(rule__EvoAnd__Group__0)
		{ after(grammarAccess.getEvoAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvoAbstractOneParameterTerm
entryRuleEvoAbstractOneParameterTerm
:
{ before(grammarAccess.getEvoAbstractOneParameterTermRule()); }
	 ruleEvoAbstractOneParameterTerm
{ after(grammarAccess.getEvoAbstractOneParameterTermRule()); } 
	 EOF 
;

// Rule EvoAbstractOneParameterTerm
ruleEvoAbstractOneParameterTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvoAbstractOneParameterTermAccess().getAlternatives()); }
		(rule__EvoAbstractOneParameterTerm__Alternatives)
		{ after(grammarAccess.getEvoAbstractOneParameterTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoOrAccess().getOrKeyword_1_1_0()); }
		'or'
		{ after(grammarAccess.getEvoOrAccess().getOrKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvoOrAccess().getVerticalLineVerticalLineKeyword_1_1_1()); }
		'||'
		{ after(grammarAccess.getEvoOrAccess().getVerticalLineVerticalLineKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoAndAccess().getAndKeyword_1_1_0()); }
		'and'
		{ after(grammarAccess.getEvoAndAccess().getAndKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvoAndAccess().getAmpersandAmpersandKeyword_1_1_1()); }
		'&&'
		{ after(grammarAccess.getEvoAndAccess().getAmpersandAmpersandKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAbstractOneParameterTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoAbstractOneParameterTermAccess().getEvoVariableTermParserRuleCall_0()); }
		ruleEvoVariableTerm
		{ after(grammarAccess.getEvoAbstractOneParameterTermAccess().getEvoVariableTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvoAbstractOneParameterTermAccess().getGroup_1()); }
		(rule__EvoAbstractOneParameterTerm__Group_1__0)
		{ after(grammarAccess.getEvoAbstractOneParameterTermAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandDocument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandDocument__Group__0__Impl
	rule__CommandDocument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandDocument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandDocumentAccess().getImportsAssignment_0()); }
	(rule__CommandDocument__ImportsAssignment_0)
	{ after(grammarAccess.getCommandDocumentAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandDocument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandDocument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandDocument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandDocumentAccess().getFormulaAssignment_1()); }
	(rule__CommandDocument__FormulaAssignment_1)
	{ after(grammarAccess.getCommandDocumentAccess().getFormulaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoFormula__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group__0__Impl
	rule__EvoFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getFormulaKeyword_0()); }
	'formula'
	{ after(grammarAccess.getEvoFormulaAccess().getFormulaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group__1__Impl
	rule__EvoFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEvoFormulaAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group__2__Impl
	rule__EvoFormula__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getGroup_2()); }
	(rule__EvoFormula__Group_2__0)?
	{ after(grammarAccess.getEvoFormulaAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group__3__Impl
	rule__EvoFormula__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getTermKeyword_3()); }
	'term'
	{ after(grammarAccess.getEvoFormulaAccess().getTermKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group__4__Impl
	rule__EvoFormula__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getTermAssignment_4()); }
	(rule__EvoFormula__TermAssignment_4)
	{ after(grammarAccess.getEvoFormulaAccess().getTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEvoFormulaAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoFormula__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2__0__Impl
	rule__EvoFormula__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getVariablesKeyword_2_0()); }
	'variables'
	{ after(grammarAccess.getEvoFormulaAccess().getVariablesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2__1__Impl
	rule__EvoFormula__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getEvoFormulaAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2__2__Impl
	rule__EvoFormula__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getVariablesAssignment_2_2()); }
	(rule__EvoFormula__VariablesAssignment_2_2)
	{ after(grammarAccess.getEvoFormulaAccess().getVariablesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2__3__Impl
	rule__EvoFormula__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getGroup_2_3()); }
	(rule__EvoFormula__Group_2_3__0)*
	{ after(grammarAccess.getEvoFormulaAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getEvoFormulaAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoFormula__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2_3__0__Impl
	rule__EvoFormula__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getEvoFormulaAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoFormula__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoFormulaAccess().getVariablesAssignment_2_3_1()); }
	(rule__EvoFormula__VariablesAssignment_2_3_1)
	{ after(grammarAccess.getEvoFormulaAccess().getVariablesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoVariableTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoVariableTerm__Group__0__Impl
	rule__EvoVariableTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoVariableTermAccess().getEvoVariableTermKeyword_0()); }
	'EvoVariableTerm'
	{ after(grammarAccess.getEvoVariableTermAccess().getEvoVariableTermKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoVariableTerm__Group__1__Impl
	rule__EvoVariableTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoVariableTermAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEvoVariableTermAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoVariableTerm__Group__2__Impl
	rule__EvoVariableTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoVariableTermAccess().getVariableKeyword_2()); }
	'variable'
	{ after(grammarAccess.getEvoVariableTermAccess().getVariableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoVariableTerm__Group__3__Impl
	rule__EvoVariableTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoVariableTermAccess().getVariableAssignment_3()); }
	(rule__EvoVariableTerm__VariableAssignment_3)
	{ after(grammarAccess.getEvoVariableTermAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoVariableTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoVariableTermAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEvoVariableTermAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoArbitratyFeatureVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoArbitratyFeatureVariable__Group__0__Impl
	rule__EvoArbitratyFeatureVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoArbitratyFeatureVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoArbitratyFeatureVariableAccess().getAfeatureKeyword_0()); }
	'afeature'
	{ after(grammarAccess.getEvoArbitratyFeatureVariableAccess().getAfeatureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoArbitratyFeatureVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoArbitratyFeatureVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoArbitratyFeatureVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureAssignment_1()); }
	(rule__EvoArbitratyFeatureVariable__FeatureAssignment_1)
	{ after(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoOr__Group__0__Impl
	rule__EvoOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoOrAccess().getEvoAndParserRuleCall_0()); }
	ruleEvoAnd
	{ after(grammarAccess.getEvoOrAccess().getEvoAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoOrAccess().getGroup_1()); }
	(rule__EvoOr__Group_1__0)*
	{ after(grammarAccess.getEvoOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoOr__Group_1__0__Impl
	rule__EvoOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoOrAccess().getEvoOrLeftElementAction_1_0()); }
	()
	{ after(grammarAccess.getEvoOrAccess().getEvoOrLeftElementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoOr__Group_1__1__Impl
	rule__EvoOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoOrAccess().getAlternatives_1_1()); }
	(rule__EvoOr__Alternatives_1_1)
	{ after(grammarAccess.getEvoOrAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoOrAccess().getRightElementAssignment_1_2()); }
	(rule__EvoOr__RightElementAssignment_1_2)
	{ after(grammarAccess.getEvoOrAccess().getRightElementAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAnd__Group__0__Impl
	rule__EvoAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAndAccess().getEvoAbstractOneParameterTermParserRuleCall_0()); }
	ruleEvoAbstractOneParameterTerm
	{ after(grammarAccess.getEvoAndAccess().getEvoAbstractOneParameterTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAndAccess().getGroup_1()); }
	(rule__EvoAnd__Group_1__0)*
	{ after(grammarAccess.getEvoAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAnd__Group_1__0__Impl
	rule__EvoAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAndAccess().getEvoAndLeftElementAction_1_0()); }
	()
	{ after(grammarAccess.getEvoAndAccess().getEvoAndLeftElementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAnd__Group_1__1__Impl
	rule__EvoAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAndAccess().getAlternatives_1_1()); }
	(rule__EvoAnd__Alternatives_1_1)
	{ after(grammarAccess.getEvoAndAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAndAccess().getRightElementAssignment_1_2()); }
	(rule__EvoAnd__RightElementAssignment_1_2)
	{ after(grammarAccess.getEvoAndAccess().getRightElementAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvoAbstractOneParameterTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAbstractOneParameterTerm__Group_1__0__Impl
	rule__EvoAbstractOneParameterTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAbstractOneParameterTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAbstractOneParameterTermAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getEvoAbstractOneParameterTermAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAbstractOneParameterTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAbstractOneParameterTerm__Group_1__1__Impl
	rule__EvoAbstractOneParameterTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAbstractOneParameterTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAbstractOneParameterTermAccess().getEvoOrParserRuleCall_1_1()); }
	ruleEvoOr
	{ after(grammarAccess.getEvoAbstractOneParameterTermAccess().getEvoOrParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAbstractOneParameterTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvoAbstractOneParameterTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAbstractOneParameterTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvoAbstractOneParameterTermAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getEvoAbstractOneParameterTermAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandDocument__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandDocumentAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getCommandDocumentAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandDocument__FormulaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandDocumentAccess().getFormulaEvoFormulaParserRuleCall_1_0()); }
		ruleEvoFormula
		{ after(grammarAccess.getCommandDocumentAccess().getFormulaEvoFormulaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__VariablesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoFormulaAccess().getVariablesEvoVariableParserRuleCall_2_2_0()); }
		ruleEvoVariable
		{ after(grammarAccess.getEvoFormulaAccess().getVariablesEvoVariableParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__VariablesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoFormulaAccess().getVariablesEvoVariableParserRuleCall_2_3_1_0()); }
		ruleEvoVariable
		{ after(grammarAccess.getEvoFormulaAccess().getVariablesEvoVariableParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoFormula__TermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoFormulaAccess().getTermEvoAbstractTermParserRuleCall_4_0()); }
		ruleEvoAbstractTerm
		{ after(grammarAccess.getEvoFormulaAccess().getTermEvoAbstractTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoVariableTerm__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoVariableTermAccess().getVariableEvoVariableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getEvoVariableTermAccess().getVariableEvoVariableIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEvoVariableTermAccess().getVariableEvoVariableIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getEvoVariableTermAccess().getVariableEvoVariableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoArbitratyFeatureVariable__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureHyFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureHyFeatureIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureHyFeatureIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureHyFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoOr__RightElementAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoOrAccess().getRightElementEvoAndParserRuleCall_1_2_0()); }
		ruleEvoAnd
		{ after(grammarAccess.getEvoOrAccess().getRightElementEvoAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvoAnd__RightElementAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvoAndAccess().getRightElementEvoAbstractOneParameterTermParserRuleCall_1_2_0()); }
		ruleEvoAbstractOneParameterTerm
		{ after(grammarAccess.getEvoAndAccess().getRightElementEvoAbstractOneParameterTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
