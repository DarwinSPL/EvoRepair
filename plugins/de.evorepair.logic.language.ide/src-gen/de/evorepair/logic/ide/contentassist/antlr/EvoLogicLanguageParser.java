/*
 * generated by Xtext 2.11.0
 */
package de.evorepair.logic.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.evorepair.logic.ide.contentassist.antlr.internal.InternalEvoLogicLanguageParser;
import de.evorepair.logic.services.EvoLogicLanguageGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class EvoLogicLanguageParser extends AbstractContentAssistParser {

	@Inject
	private EvoLogicLanguageGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalEvoLogicLanguageParser createParser() {
		InternalEvoLogicLanguageParser result = new InternalEvoLogicLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEvoOrAccess().getAlternatives_1_1(), "rule__EvoOr__Alternatives_1_1");
					put(grammarAccess.getEvoAndAccess().getAlternatives_1_1(), "rule__EvoAnd__Alternatives_1_1");
					put(grammarAccess.getEvoAbstractOneParameterTermAccess().getAlternatives(), "rule__EvoAbstractOneParameterTerm__Alternatives");
					put(grammarAccess.getCommandDocumentAccess().getGroup(), "rule__CommandDocument__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getEvoFormulaAccess().getGroup(), "rule__EvoFormula__Group__0");
					put(grammarAccess.getEvoFormulaAccess().getGroup_2(), "rule__EvoFormula__Group_2__0");
					put(grammarAccess.getEvoFormulaAccess().getGroup_2_3(), "rule__EvoFormula__Group_2_3__0");
					put(grammarAccess.getEvoVariableTermAccess().getGroup(), "rule__EvoVariableTerm__Group__0");
					put(grammarAccess.getEvoArbitratyFeatureVariableAccess().getGroup(), "rule__EvoArbitratyFeatureVariable__Group__0");
					put(grammarAccess.getEvoOrAccess().getGroup(), "rule__EvoOr__Group__0");
					put(grammarAccess.getEvoOrAccess().getGroup_1(), "rule__EvoOr__Group_1__0");
					put(grammarAccess.getEvoXOrAccess().getGroup(), "rule__EvoXOr__Group__0");
					put(grammarAccess.getEvoXOrAccess().getGroup_1(), "rule__EvoXOr__Group_1__0");
					put(grammarAccess.getEvoAndAccess().getGroup(), "rule__EvoAnd__Group__0");
					put(grammarAccess.getEvoAndAccess().getGroup_1(), "rule__EvoAnd__Group_1__0");
					put(grammarAccess.getEvoAbstractOneParameterTermAccess().getGroup_1(), "rule__EvoAbstractOneParameterTerm__Group_1__0");
					put(grammarAccess.getCommandDocumentAccess().getImportsAssignment_0(), "rule__CommandDocument__ImportsAssignment_0");
					put(grammarAccess.getCommandDocumentAccess().getFormulaAssignment_1(), "rule__CommandDocument__FormulaAssignment_1");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getEvoFormulaAccess().getVariablesAssignment_2_2(), "rule__EvoFormula__VariablesAssignment_2_2");
					put(grammarAccess.getEvoFormulaAccess().getVariablesAssignment_2_3_1(), "rule__EvoFormula__VariablesAssignment_2_3_1");
					put(grammarAccess.getEvoFormulaAccess().getTermAssignment_4(), "rule__EvoFormula__TermAssignment_4");
					put(grammarAccess.getEvoVariableTermAccess().getVariableAssignment_3(), "rule__EvoVariableTerm__VariableAssignment_3");
					put(grammarAccess.getEvoArbitratyFeatureVariableAccess().getFeatureAssignment_1(), "rule__EvoArbitratyFeatureVariable__FeatureAssignment_1");
					put(grammarAccess.getEvoOrAccess().getRightElementAssignment_1_2(), "rule__EvoOr__RightElementAssignment_1_2");
					put(grammarAccess.getEvoXOrAccess().getRightElementAssignment_1_2(), "rule__EvoXOr__RightElementAssignment_1_2");
					put(grammarAccess.getEvoAndAccess().getRightElementAssignment_1_2(), "rule__EvoAnd__RightElementAssignment_1_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public EvoLogicLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(EvoLogicLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
