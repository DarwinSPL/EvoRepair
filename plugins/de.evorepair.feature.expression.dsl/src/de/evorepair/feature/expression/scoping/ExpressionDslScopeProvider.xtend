/*
 * generated by Xtext 2.12.0
 */
package de.evorepair.feature.expression.scoping

import eu.hyvar.feature.HyFeature
import eu.hyvar.feature.expression.HyFeatureReferenceExpression
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class ExpressionDslScopeProvider extends AbstractDeclarativeScopeProvider {

	
	override getScope(EObject context, EReference reference) {
		if(context instanceof HyFeatureReferenceExpression){
			//println("getScope === "+context.feature);
			
			
		}
		
		val scope = super.getScope(context, reference)
		
		
		return scope
	}
	
}
