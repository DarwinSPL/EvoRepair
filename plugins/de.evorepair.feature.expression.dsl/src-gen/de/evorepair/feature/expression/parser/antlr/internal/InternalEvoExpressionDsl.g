/*
 * generated by Xtext 2.12.0
 */
grammar InternalEvoExpressionDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.evorepair.feature.expression.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.evorepair.feature.expression.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.evorepair.feature.expression.services.EvoExpressionDslGrammarAccess;

}

@parser::members {

 	private EvoExpressionDslGrammarAccess grammarAccess;

    public InternalEvoExpressionDslParser(TokenStream input, EvoExpressionDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GrammarEntry";
   	}

   	@Override
   	protected EvoExpressionDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGrammarEntry
entryRuleGrammarEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGrammarEntryRule()); }
	iv_ruleGrammarEntry=ruleGrammarEntry
	{ $current=$iv_ruleGrammarEntry.current; }
	EOF;

// Rule GrammarEntry
ruleGrammarEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getGrammarEntryAccess().getExpressionEvoMappingExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleEvoMappingExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getGrammarEntryRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEvoMappingExpression
entryRuleEvoMappingExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingExpressionRule()); }
	iv_ruleEvoMappingExpression=ruleEvoMappingExpression
	{ $current=$iv_ruleEvoMappingExpression.current; }
	EOF;

// Rule EvoMappingExpression
ruleEvoMappingExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEvoMappingExpressionAccess().getEvoMappingOrParserRuleCall());
	}
	this_EvoMappingOr_0=ruleEvoMappingOr
	{
		$current = $this_EvoMappingOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEvoMappingOr
entryRuleEvoMappingOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingOrRule()); }
	iv_ruleEvoMappingOr=ruleEvoMappingOr
	{ $current=$iv_ruleEvoMappingOr.current; }
	EOF;

// Rule EvoMappingOr
ruleEvoMappingOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingOrAccess().getEvoMappingAndParserRuleCall_0());
		}
		this_EvoMappingAnd_0=ruleEvoMappingAnd
		{
			$current = $this_EvoMappingAnd_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingOrAccess().getHyOrExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingOrAccess().getOperand2EvoMappingAndParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingOrRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingAnd
entryRuleEvoMappingAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingAndRule()); }
	iv_ruleEvoMappingAnd=ruleEvoMappingAnd
	{ $current=$iv_ruleEvoMappingAnd.current; }
	EOF;

// Rule EvoMappingAnd
ruleEvoMappingAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingAndAccess().getEvoMappingEqualParserRuleCall_0());
		}
		this_EvoMappingEqual_0=ruleEvoMappingEqual
		{
			$current = $this_EvoMappingEqual_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingAndAccess().getHyAndExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingAndAccess().getOperand2EvoMappingEqualParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingEqual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingAndRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingEqual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingEqual
entryRuleEvoMappingEqual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingEqualRule()); }
	iv_ruleEvoMappingEqual=ruleEvoMappingEqual
	{ $current=$iv_ruleEvoMappingEqual.current; }
	EOF;

// Rule EvoMappingEqual
ruleEvoMappingEqual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingEqualAccess().getEvoMappingUnequalParserRuleCall_0());
		}
		this_EvoMappingUnequal_0=ruleEvoMappingUnequal
		{
			$current = $this_EvoMappingUnequal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingEqualAccess().getHyEqualExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='=='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingEqualAccess().getEqualsSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingEqualAccess().getOperand2EvoMappingUnequalParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingUnequal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingEqualRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingUnequal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingUnequal
entryRuleEvoMappingUnequal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingUnequalRule()); }
	iv_ruleEvoMappingUnequal=ruleEvoMappingUnequal
	{ $current=$iv_ruleEvoMappingUnequal.current; }
	EOF;

// Rule EvoMappingUnequal
ruleEvoMappingUnequal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingUnequalAccess().getEvoMappingImplicationParserRuleCall_0());
		}
		this_EvoMappingImplication_0=ruleEvoMappingImplication
		{
			$current = $this_EvoMappingImplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingUnequalAccess().getHyNotEqualExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='!='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingUnequalAccess().getExclamationMarkEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingUnequalAccess().getOperand2EvoMappingImplicationParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingImplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingUnequalRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingImplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingImplication
entryRuleEvoMappingImplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingImplicationRule()); }
	iv_ruleEvoMappingImplication=ruleEvoMappingImplication
	{ $current=$iv_ruleEvoMappingImplication.current; }
	EOF;

// Rule EvoMappingImplication
ruleEvoMappingImplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingImplicationAccess().getEvoMappingEquivalenceParserRuleCall_0());
		}
		this_EvoMappingEquivalence_0=ruleEvoMappingEquivalence
		{
			$current = $this_EvoMappingEquivalence_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingImplicationAccess().getHyImpliesExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingImplicationAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingImplicationAccess().getOperand2EvoMappingEquivalenceParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingEquivalence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingImplicationRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingEquivalence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingEquivalence
entryRuleEvoMappingEquivalence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingEquivalenceRule()); }
	iv_ruleEvoMappingEquivalence=ruleEvoMappingEquivalence
	{ $current=$iv_ruleEvoMappingEquivalence.current; }
	EOF;

// Rule EvoMappingEquivalence
ruleEvoMappingEquivalence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingEquivalenceAccess().getEvoMappingLessExpressionParserRuleCall_0());
		}
		this_EvoMappingLessExpression_0=ruleEvoMappingLessExpression
		{
			$current = $this_EvoMappingLessExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingEquivalenceAccess().getHyEquivalenceExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='<->'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingEquivalenceAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingEquivalenceAccess().getOperand2EvoMappingLessExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingLessExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingEquivalenceRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingLessExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingLessExpression
entryRuleEvoMappingLessExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingLessExpressionRule()); }
	iv_ruleEvoMappingLessExpression=ruleEvoMappingLessExpression
	{ $current=$iv_ruleEvoMappingLessExpression.current; }
	EOF;

// Rule EvoMappingLessExpression
ruleEvoMappingLessExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingLessExpressionAccess().getEvoMappingIfPossibleExpressionParserRuleCall_0());
		}
		this_EvoMappingIfPossibleExpression_0=ruleEvoMappingIfPossibleExpression
		{
			$current = $this_EvoMappingIfPossibleExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingLessExpressionAccess().getHyLessExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingLessExpressionAccess().getLessThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingLessExpressionAccess().getOperand2EvoMappingIfPossibleExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingIfPossibleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingLessExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingIfPossibleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingIfPossibleExpression
entryRuleEvoMappingIfPossibleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingIfPossibleExpressionRule()); }
	iv_ruleEvoMappingIfPossibleExpression=ruleEvoMappingIfPossibleExpression
	{ $current=$iv_ruleEvoMappingIfPossibleExpression.current; }
	EOF;

// Rule EvoMappingIfPossibleExpression
ruleEvoMappingIfPossibleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingIfPossibleExpressionAccess().getEvoMappingLessOrEqualExpressionParserRuleCall_0());
		}
		this_EvoMappingLessOrEqualExpression_0=ruleEvoMappingLessOrEqualExpression
		{
			$current = $this_EvoMappingLessOrEqualExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='ifPossible('
			{
				newLeafNode(otherlv_1, grammarAccess.getEvoMappingIfPossibleExpressionAccess().getIfPossibleKeyword_1_0());
			}
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getEvoMappingIfPossibleExpressionAccess().getHyIfPossibleExpressionOperandsAction_1_1(),
						$current);
				}
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getEvoMappingIfPossibleExpressionAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoMappingIfPossibleExpressionAccess().getOperandsEvoMappingLessOrEqualExpressionParserRuleCall_1_2_1_0());
						}
						lv_operands_4_0=ruleEvoMappingLessOrEqualExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoMappingIfPossibleExpressionRule());
							}
							add(
								$current,
								"operands",
								lv_operands_4_0,
								"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingLessOrEqualExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getEvoMappingIfPossibleExpressionAccess().getRightParenthesisKeyword_1_3());
			}
		)*
	)
;

// Entry rule entryRuleEvoMappingLessOrEqualExpression
entryRuleEvoMappingLessOrEqualExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingLessOrEqualExpressionRule()); }
	iv_ruleEvoMappingLessOrEqualExpression=ruleEvoMappingLessOrEqualExpression
	{ $current=$iv_ruleEvoMappingLessOrEqualExpression.current; }
	EOF;

// Rule EvoMappingLessOrEqualExpression
ruleEvoMappingLessOrEqualExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingLessOrEqualExpressionAccess().getEvoMappingGreaterExpressionParserRuleCall_0());
		}
		this_EvoMappingGreaterExpression_0=ruleEvoMappingGreaterExpression
		{
			$current = $this_EvoMappingGreaterExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingLessOrEqualExpressionAccess().getHyLessOrEqualExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='<='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingLessOrEqualExpressionAccess().getLessThanSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingLessOrEqualExpressionAccess().getOperand2EvoMappingGreaterExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingGreaterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingLessOrEqualExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingGreaterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingGreaterExpression
entryRuleEvoMappingGreaterExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingGreaterExpressionRule()); }
	iv_ruleEvoMappingGreaterExpression=ruleEvoMappingGreaterExpression
	{ $current=$iv_ruleEvoMappingGreaterExpression.current; }
	EOF;

// Rule EvoMappingGreaterExpression
ruleEvoMappingGreaterExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingGreaterExpressionAccess().getEvoMappingGreaterOrEqualExpressionParserRuleCall_0());
		}
		this_EvoMappingGreaterOrEqualExpression_0=ruleEvoMappingGreaterOrEqualExpression
		{
			$current = $this_EvoMappingGreaterOrEqualExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingGreaterExpressionAccess().getHyGreaterExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='>'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingGreaterExpressionAccess().getGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingGreaterExpressionAccess().getOperand2EvoMappingGreaterOrEqualExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingGreaterOrEqualExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingGreaterExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingGreaterOrEqualExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingGreaterOrEqualExpression
entryRuleEvoMappingGreaterOrEqualExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingGreaterOrEqualExpressionRule()); }
	iv_ruleEvoMappingGreaterOrEqualExpression=ruleEvoMappingGreaterOrEqualExpression
	{ $current=$iv_ruleEvoMappingGreaterOrEqualExpression.current; }
	EOF;

// Rule EvoMappingGreaterOrEqualExpression
ruleEvoMappingGreaterOrEqualExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingGreaterOrEqualExpressionAccess().getEvoMappingSubtractionExpressionParserRuleCall_0());
		}
		this_EvoMappingSubtractionExpression_0=ruleEvoMappingSubtractionExpression
		{
			$current = $this_EvoMappingSubtractionExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingGreaterOrEqualExpressionAccess().getHyGreaterOrEqualExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='>='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingGreaterOrEqualExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingGreaterOrEqualExpressionAccess().getOperand2EvoMappingSubtractionExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingSubtractionExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingGreaterOrEqualExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingSubtractionExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingSubtractionExpression
entryRuleEvoMappingSubtractionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingSubtractionExpressionRule()); }
	iv_ruleEvoMappingSubtractionExpression=ruleEvoMappingSubtractionExpression
	{ $current=$iv_ruleEvoMappingSubtractionExpression.current; }
	EOF;

// Rule EvoMappingSubtractionExpression
ruleEvoMappingSubtractionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingSubtractionExpressionAccess().getEvoMappingAdditionExpressionParserRuleCall_0());
		}
		this_EvoMappingAdditionExpression_0=ruleEvoMappingAdditionExpression
		{
			$current = $this_EvoMappingAdditionExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingSubtractionExpressionAccess().getHySubtractionExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='-'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingSubtractionExpressionAccess().getHyphenMinusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingSubtractionExpressionAccess().getOperand2EvoMappingAdditionExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingAdditionExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingSubtractionExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingAdditionExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingAdditionExpression
entryRuleEvoMappingAdditionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingAdditionExpressionRule()); }
	iv_ruleEvoMappingAdditionExpression=ruleEvoMappingAdditionExpression
	{ $current=$iv_ruleEvoMappingAdditionExpression.current; }
	EOF;

// Rule EvoMappingAdditionExpression
ruleEvoMappingAdditionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingAdditionExpressionAccess().getEvoMappingModuloExpressionParserRuleCall_0());
		}
		this_EvoMappingModuloExpression_0=ruleEvoMappingModuloExpression
		{
			$current = $this_EvoMappingModuloExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingAdditionExpressionAccess().getHyAdditionExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingAdditionExpressionAccess().getPlusSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingAdditionExpressionAccess().getOperand2EvoMappingModuloExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingModuloExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingAdditionExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingModuloExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingModuloExpression
entryRuleEvoMappingModuloExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingModuloExpressionRule()); }
	iv_ruleEvoMappingModuloExpression=ruleEvoMappingModuloExpression
	{ $current=$iv_ruleEvoMappingModuloExpression.current; }
	EOF;

// Rule EvoMappingModuloExpression
ruleEvoMappingModuloExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingModuloExpressionAccess().getEvoMappingMultiplicationExpressionParserRuleCall_0());
		}
		this_EvoMappingMultiplicationExpression_0=ruleEvoMappingMultiplicationExpression
		{
			$current = $this_EvoMappingMultiplicationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingModuloExpressionAccess().getHyModuloExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='%'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingModuloExpressionAccess().getPercentSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingModuloExpressionAccess().getOperand2EvoMappingMultiplicationExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingMultiplicationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingModuloExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingMultiplicationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingMultiplicationExpression
entryRuleEvoMappingMultiplicationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingMultiplicationExpressionRule()); }
	iv_ruleEvoMappingMultiplicationExpression=ruleEvoMappingMultiplicationExpression
	{ $current=$iv_ruleEvoMappingMultiplicationExpression.current; }
	EOF;

// Rule EvoMappingMultiplicationExpression
ruleEvoMappingMultiplicationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingMultiplicationExpressionAccess().getEvoMappingDivisionExpressionParserRuleCall_0());
		}
		this_EvoMappingDivisionExpression_0=ruleEvoMappingDivisionExpression
		{
			$current = $this_EvoMappingDivisionExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingMultiplicationExpressionAccess().getHyMultiplicationExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='*'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingMultiplicationExpressionAccess().getAsteriskKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingMultiplicationExpressionAccess().getOperand2EvoMappingDivisionExpressionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingDivisionExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingMultiplicationExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingDivisionExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingDivisionExpression
entryRuleEvoMappingDivisionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingDivisionExpressionRule()); }
	iv_ruleEvoMappingDivisionExpression=ruleEvoMappingDivisionExpression
	{ $current=$iv_ruleEvoMappingDivisionExpression.current; }
	EOF;

// Rule EvoMappingDivisionExpression
ruleEvoMappingDivisionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingDivisionExpressionAccess().getEvoMappingTerminalParserRuleCall_0());
		}
		this_EvoMappingTerminal_0=ruleEvoMappingTerminal
		{
			$current = $this_EvoMappingTerminal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoMappingDivisionExpressionAccess().getHyDivisionExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='/'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingDivisionExpressionAccess().getSolidusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoMappingDivisionExpressionAccess().getOperand2EvoMappingTerminalParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoMappingTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoMappingDivisionExpressionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoMappingNegation
entryRuleEvoMappingNegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingNegationRule()); }
	iv_ruleEvoMappingNegation=ruleEvoMappingNegation
	{ $current=$iv_ruleEvoMappingNegation.current; }
	EOF;

// Rule EvoMappingNegation
ruleEvoMappingNegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingNegationAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingNegationAccess().getOperandEvoMappingTerminalParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleEvoMappingTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingNegationRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingTerminal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvoMappingTerminal
entryRuleEvoMappingTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingTerminalRule()); }
	iv_ruleEvoMappingTerminal=ruleEvoMappingTerminal
	{ $current=$iv_ruleEvoMappingTerminal.current; }
	EOF;

// Rule EvoMappingTerminal
ruleEvoMappingTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingFeatureReferenceExpressionParserRuleCall_0());
		}
		this_EvoMappingFeatureReferenceExpression_0=ruleEvoMappingFeatureReferenceExpression
		{
			$current = $this_EvoMappingFeatureReferenceExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingNestedExpressionParserRuleCall_1());
		}
		this_EvoMappingNestedExpression_1=ruleEvoMappingNestedExpression
		{
			$current = $this_EvoMappingNestedExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingNegationParserRuleCall_2());
		}
		this_EvoMappingNegation_2=ruleEvoMappingNegation
		{
			$current = $this_EvoMappingNegation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingConditionalFeatureReferenceExpressionParserRuleCall_3());
		}
		this_EvoMappingConditionalFeatureReferenceExpression_3=ruleEvoMappingConditionalFeatureReferenceExpression
		{
			$current = $this_EvoMappingConditionalFeatureReferenceExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingContextInformationReferenceExpressionParserRuleCall_4());
		}
		this_EvoMappingContextInformationReferenceExpression_4=ruleEvoMappingContextInformationReferenceExpression
		{
			$current = $this_EvoMappingContextInformationReferenceExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingAttributeReferenceExpressionParserRuleCall_5());
		}
		this_EvoMappingAttributeReferenceExpression_5=ruleEvoMappingAttributeReferenceExpression
		{
			$current = $this_EvoMappingAttributeReferenceExpression_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingValueExpressionParserRuleCall_6());
		}
		this_EvoMappingValueExpression_6=ruleEvoMappingValueExpression
		{
			$current = $this_EvoMappingValueExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingBooleanValueExpressionParserRuleCall_7());
		}
		this_EvoMappingBooleanValueExpression_7=ruleEvoMappingBooleanValueExpression
		{
			$current = $this_EvoMappingBooleanValueExpression_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingMimumumExpressionParserRuleCall_8());
		}
		this_EvoMappingMimumumExpression_8=ruleEvoMappingMimumumExpression
		{
			$current = $this_EvoMappingMimumumExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingMaximumExpressionParserRuleCall_9());
		}
		this_EvoMappingMaximumExpression_9=ruleEvoMappingMaximumExpression
		{
			$current = $this_EvoMappingMaximumExpression_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingTerminalAccess().getEvoMappingNotParserRuleCall_10());
		}
		this_EvoMappingNot_10=ruleEvoMappingNot
		{
			$current = $this_EvoMappingNot_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoMappingNestedExpression
entryRuleEvoMappingNestedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingNestedExpressionRule()); }
	iv_ruleEvoMappingNestedExpression=ruleEvoMappingNestedExpression
	{ $current=$iv_ruleEvoMappingNestedExpression.current; }
	EOF;

// Rule EvoMappingNestedExpression
ruleEvoMappingNestedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingNestedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingNestedExpressionAccess().getOperandEvoMappingExpressionParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleEvoMappingExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingNestedExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoMappingNestedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleEvoMappingNot
entryRuleEvoMappingNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingNotRule()); }
	iv_ruleEvoMappingNot=ruleEvoMappingNot
	{ $current=$iv_ruleEvoMappingNot.current; }
	EOF;

// Rule EvoMappingNot
ruleEvoMappingNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingNotAccess().getExclamationMarkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingNotAccess().getOperandEvoMappingTerminalParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleEvoMappingTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingNotRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingTerminal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvoMappingFeatureReferenceExpression
entryRuleEvoMappingFeatureReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingFeatureReferenceExpressionRule()); }
	iv_ruleEvoMappingFeatureReferenceExpression=ruleEvoMappingFeatureReferenceExpression
	{ $current=$iv_ruleEvoMappingFeatureReferenceExpression.current; }
	EOF;

// Rule EvoMappingFeatureReferenceExpression
ruleEvoMappingFeatureReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEvoMappingFeatureReferenceExpressionRule());
				}
			}
			otherlv_0=RULE_STRING
			{
				newLeafNode(otherlv_0, grammarAccess.getEvoMappingFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleEvoMappingConditionalFeatureReferenceExpression
entryRuleEvoMappingConditionalFeatureReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingConditionalFeatureReferenceExpressionRule()); }
	iv_ruleEvoMappingConditionalFeatureReferenceExpression=ruleEvoMappingConditionalFeatureReferenceExpression
	{ $current=$iv_ruleEvoMappingConditionalFeatureReferenceExpression.current; }
	EOF;

// Rule EvoMappingConditionalFeatureReferenceExpression
ruleEvoMappingConditionalFeatureReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='?'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingConditionalFeatureReferenceExpressionAccess().getQuestionMarkKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingConditionalFeatureReferenceExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoMappingConditionalFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingConditionalFeatureReferenceExpressionAccess().getVersionRestrictionEvoMappingVersionRestrictionParserRuleCall_2_0());
				}
				lv_versionRestriction_2_0=ruleEvoMappingVersionRestriction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingConditionalFeatureReferenceExpressionRule());
					}
					set(
						$current,
						"versionRestriction",
						lv_versionRestriction_2_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingVersionRestriction");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEvoMappingVersionRestriction
entryRuleEvoMappingVersionRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingVersionRestrictionRule()); }
	iv_ruleEvoMappingVersionRestriction=ruleEvoMappingVersionRestriction
	{ $current=$iv_ruleEvoMappingVersionRestriction.current; }
	EOF;

// Rule EvoMappingVersionRestriction
ruleEvoMappingVersionRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoMappingVersionRestrictionAccess().getEvoMappingRelativeVersionRestrictionParserRuleCall_0());
		}
		this_EvoMappingRelativeVersionRestriction_0=ruleEvoMappingRelativeVersionRestriction
		{
			$current = $this_EvoMappingRelativeVersionRestriction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoMappingVersionRestrictionAccess().getEvoMappingVersionRangeRestrictionParserRuleCall_1());
		}
		this_EvoMappingVersionRangeRestriction_1=ruleEvoMappingVersionRangeRestriction
		{
			$current = $this_EvoMappingVersionRangeRestriction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoMappingRelativeVersionRestriction
entryRuleEvoMappingRelativeVersionRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingRelativeVersionRestrictionRule()); }
	iv_ruleEvoMappingRelativeVersionRestriction=ruleEvoMappingRelativeVersionRestriction
	{ $current=$iv_ruleEvoMappingRelativeVersionRestriction.current; }
	EOF;

// Rule EvoMappingRelativeVersionRestriction
ruleEvoMappingRelativeVersionRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingRelativeVersionRestrictionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingRelativeVersionRestrictionAccess().getOperatorEvoMappingRelativeVersionRestrictionOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleEvoMappingRelativeVersionRestrictionOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingRelativeVersionRestrictionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingRelativeVersionRestrictionOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingRelativeVersionRestrictionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEvoMappingRelativeVersionRestrictionAccess().getVersionHyVersionCrossReference_2_0());
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoMappingRelativeVersionRestrictionAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoMappingVersionRangeRestriction
entryRuleEvoMappingVersionRangeRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingVersionRangeRestrictionRule()); }
	iv_ruleEvoMappingVersionRangeRestriction=ruleEvoMappingVersionRangeRestriction
	{ $current=$iv_ruleEvoMappingVersionRangeRestriction.current; }
	EOF;

// Rule EvoMappingVersionRangeRestriction
ruleEvoMappingVersionRangeRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='['
			{
				newLeafNode(otherlv_0, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getLeftSquareBracketKeyword_0_0());
			}
			(
				(
					lv_lowerIncluded_1_0='true'
					{
						newLeafNode(lv_lowerIncluded_1_0, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getLowerIncludedTrueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoMappingVersionRangeRestrictionRule());
						}
						setWithLastConsumed($current, "lowerIncluded", true, "true");
					}
				)
			)
		)
		    |
		(
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getFalseKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoMappingVersionRangeRestrictionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getLowerVersionHyVersionCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='-'
			{
				newLeafNode(otherlv_4, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getHyphenMinusKeyword_1_2());
			}
			(
				(
					lv_upperIncluded_5_0='true'
					{
						newLeafNode(lv_upperIncluded_5_0, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getUpperIncludedTrueKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoMappingVersionRangeRestrictionRule());
						}
						setWithLastConsumed($current, "upperIncluded", true, "true");
					}
				)
			)
		)
		    |
		(
			otherlv_6='false'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getFalseKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoMappingVersionRangeRestrictionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getUpperVersionHyVersionCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getEvoMappingVersionRangeRestrictionAccess().getRightSquareBracketKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleEvoMappingContextInformationReferenceExpression
entryRuleEvoMappingContextInformationReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingContextInformationReferenceExpressionRule()); }
	iv_ruleEvoMappingContextInformationReferenceExpression=ruleEvoMappingContextInformationReferenceExpression
	{ $current=$iv_ruleEvoMappingContextInformationReferenceExpression.current; }
	EOF;

// Rule EvoMappingContextInformationReferenceExpression
ruleEvoMappingContextInformationReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context:'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingContextInformationReferenceExpressionAccess().getContextKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingContextInformationReferenceExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoMappingContextInformationReferenceExpressionAccess().getContextInformationHyContextualInformationCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvoMappingAttributeReferenceExpression
entryRuleEvoMappingAttributeReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingAttributeReferenceExpressionRule()); }
	iv_ruleEvoMappingAttributeReferenceExpression=ruleEvoMappingAttributeReferenceExpression
	{ $current=$iv_ruleEvoMappingAttributeReferenceExpression.current; }
	EOF;

// Rule EvoMappingAttributeReferenceExpression
ruleEvoMappingAttributeReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingAttributeReferenceExpressionRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getEvoMappingAttributeReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoMappingAttributeReferenceExpressionAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingAttributeReferenceExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoMappingAttributeReferenceExpressionAccess().getAttributeHyFeatureAttributeCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvoMappingValueExpression
entryRuleEvoMappingValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingValueExpressionRule()); }
	iv_ruleEvoMappingValueExpression=ruleEvoMappingValueExpression
	{ $current=$iv_ruleEvoMappingValueExpression.current; }
	EOF;

// Rule EvoMappingValueExpression
ruleEvoMappingValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEvoMappingValueExpressionAccess().getValueEvoMappingNumberValueParserRuleCall_0());
			}
			lv_value_0_0=ruleEvoMappingNumberValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEvoMappingValueExpressionRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingNumberValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEvoMappingBooleanValueExpression
entryRuleEvoMappingBooleanValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingBooleanValueExpressionRule()); }
	iv_ruleEvoMappingBooleanValueExpression=ruleEvoMappingBooleanValueExpression
	{ $current=$iv_ruleEvoMappingBooleanValueExpression.current; }
	EOF;

// Rule EvoMappingBooleanValueExpression
ruleEvoMappingBooleanValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoMappingBooleanValueExpressionAccess().getHyBooleanValueExpressionAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_0='true'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getEvoMappingBooleanValueExpressionAccess().getValueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoMappingBooleanValueExpressionRule());
						}
						setWithLastConsumed($current, "value", true, "true");
					}
				)
			)
			    |
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoMappingBooleanValueExpressionAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleEvoMappingNumberValue
entryRuleEvoMappingNumberValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingNumberValueRule()); }
	iv_ruleEvoMappingNumberValue=ruleEvoMappingNumberValue
	{ $current=$iv_ruleEvoMappingNumberValue.current; }
	EOF;

// Rule EvoMappingNumberValue
ruleEvoMappingNumberValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getEvoMappingNumberValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEvoMappingNumberValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleEvoMappingEnumLiteral
entryRuleEvoMappingEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingEnumLiteralRule()); }
	iv_ruleEvoMappingEnumLiteral=ruleEvoMappingEnumLiteral
	{ $current=$iv_ruleEvoMappingEnumLiteral.current; }
	EOF;

// Rule EvoMappingEnumLiteral
ruleEvoMappingEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnumLiteral('
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingEnumLiteralAccess().getEnumLiteralKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEvoMappingEnumLiteralAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingEnumLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoMappingEnumLiteralAccess().getCommaKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_INT
				{
					newLeafNode(lv_value_3_0, grammarAccess.getEvoMappingEnumLiteralAccess().getValueINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoMappingEnumLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getEvoMappingEnumLiteralAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getEvoMappingEnumLiteralAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					(
						(
							lv_validSince_6_0=RULE_DATE
							{
								newLeafNode(lv_validSince_6_0, grammarAccess.getEvoMappingEnumLiteralAccess().getValidSinceDATETerminalRuleCall_5_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoMappingEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validSince",
									lv_validSince_6_0,
									"de.evorepair.feature.expression.EvoExpressionDsl.DATE");
							}
						)
					)
					otherlv_7='-'
					{
						newLeafNode(otherlv_7, grammarAccess.getEvoMappingEnumLiteralAccess().getHyphenMinusKeyword_5_1_0_1());
					}
					(
						(
							lv_validUntil_8_0=RULE_DATE
							{
								newLeafNode(lv_validUntil_8_0, grammarAccess.getEvoMappingEnumLiteralAccess().getValidUntilDATETerminalRuleCall_5_1_0_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoMappingEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validUntil",
									lv_validUntil_8_0,
									"de.evorepair.feature.expression.EvoExpressionDsl.DATE");
							}
						)
					)
				)
				    |
				(
					(
						(
							lv_validSince_9_0=RULE_DATE
							{
								newLeafNode(lv_validSince_9_0, grammarAccess.getEvoMappingEnumLiteralAccess().getValidSinceDATETerminalRuleCall_5_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoMappingEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validSince",
									lv_validSince_9_0,
									"de.evorepair.feature.expression.EvoExpressionDsl.DATE");
							}
						)
					)
					otherlv_10='-'
					{
						newLeafNode(otherlv_10, grammarAccess.getEvoMappingEnumLiteralAccess().getHyphenMinusKeyword_5_1_1_1());
					}
				)
				    |
				(
					otherlv_11='eternity'
					{
						newLeafNode(otherlv_11, grammarAccess.getEvoMappingEnumLiteralAccess().getEternityKeyword_5_1_2_0());
					}
					otherlv_12='-'
					{
						newLeafNode(otherlv_12, grammarAccess.getEvoMappingEnumLiteralAccess().getHyphenMinusKeyword_5_1_2_1());
					}
					(
						(
							lv_validUntil_13_0=RULE_DATE
							{
								newLeafNode(lv_validUntil_13_0, grammarAccess.getEvoMappingEnumLiteralAccess().getValidUntilDATETerminalRuleCall_5_1_2_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoMappingEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validUntil",
									lv_validUntil_13_0,
									"de.evorepair.feature.expression.EvoExpressionDsl.DATE");
							}
						)
					)
				)
			)
			otherlv_14=']'
			{
				newLeafNode(otherlv_14, grammarAccess.getEvoMappingEnumLiteralAccess().getRightSquareBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleEvoMappingMimumumExpression
entryRuleEvoMappingMimumumExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingMimumumExpressionRule()); }
	iv_ruleEvoMappingMimumumExpression=ruleEvoMappingMimumumExpression
	{ $current=$iv_ruleEvoMappingMimumumExpression.current; }
	EOF;

// Rule EvoMappingMimumumExpression
ruleEvoMappingMimumumExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='min('
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingMimumumExpressionAccess().getMinKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingMimumumExpressionAccess().getOperandEvoMappingExpressionParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleEvoMappingExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingMimumumExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoMappingMimumumExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleEvoMappingMaximumExpression
entryRuleEvoMappingMaximumExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoMappingMaximumExpressionRule()); }
	iv_ruleEvoMappingMaximumExpression=ruleEvoMappingMaximumExpression
	{ $current=$iv_ruleEvoMappingMaximumExpression.current; }
	EOF;

// Rule EvoMappingMaximumExpression
ruleEvoMappingMaximumExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='max('
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoMappingMaximumExpressionAccess().getMaxKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoMappingMaximumExpressionAccess().getOperandEvoMappingExpressionParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleEvoMappingExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoMappingMaximumExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"de.evorepair.feature.expression.EvoExpressionDsl.EvoMappingExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoMappingMaximumExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleEvoExpression
entryRuleEvoExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoExpressionRule()); }
	iv_ruleEvoExpression=ruleEvoExpression
	{ $current=$iv_ruleEvoExpression.current; }
	EOF;

// Rule EvoExpression
ruleEvoExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEvoExpressionAccess().getEvoXOrParserRuleCall());
	}
	this_EvoXOr_0=ruleEvoXOr
	{
		$current = $this_EvoXOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEvoXOr
entryRuleEvoXOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoXOrRule()); }
	iv_ruleEvoXOr=ruleEvoXOr
	{ $current=$iv_ruleEvoXOr.current; }
	EOF;

// Rule EvoXOr
ruleEvoXOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoXOrAccess().getEvoOrParserRuleCall_0());
		}
		this_EvoOr_0=ruleEvoOr
		{
			$current = $this_EvoOr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoXOrAccess().getEvoXOrOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='xor'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoXOrAccess().getXorKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoXOrAccess().getOperand2EvoOrParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoXOrRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoOr
entryRuleEvoOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoOrRule()); }
	iv_ruleEvoOr=ruleEvoOr
	{ $current=$iv_ruleEvoOr.current; }
	EOF;

// Rule EvoOr
ruleEvoOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoOrAccess().getEvoAndParserRuleCall_0());
		}
		this_EvoAnd_0=ruleEvoAnd
		{
			$current = $this_EvoAnd_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoOrAccess().getHyOrExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoOrAccess().getOperand2EvoAndParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoOrRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoAnd
entryRuleEvoAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoAndRule()); }
	iv_ruleEvoAnd=ruleEvoAnd
	{ $current=$iv_ruleEvoAnd.current; }
	EOF;

// Rule EvoAnd
ruleEvoAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoAndAccess().getEvoEqualParserRuleCall_0());
		}
		this_EvoEqual_0=ruleEvoEqual
		{
			$current = $this_EvoEqual_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoAndAccess().getHyAndExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoAndAccess().getOperand2EvoEqualParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoEqual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoAndRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoEqual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoEqual
entryRuleEvoEqual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoEqualRule()); }
	iv_ruleEvoEqual=ruleEvoEqual
	{ $current=$iv_ruleEvoEqual.current; }
	EOF;

// Rule EvoEqual
ruleEvoEqual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoEqualAccess().getEvoUnequalParserRuleCall_0());
		}
		this_EvoUnequal_0=ruleEvoUnequal
		{
			$current = $this_EvoUnequal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoEqualAccess().getHyEqualExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='=='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoEqualAccess().getEqualsSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoEqualAccess().getOperand2EvoUnequalSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoUnequalSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoEqualRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoUnequalSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoUnequalSize
entryRuleEvoUnequalSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoUnequalSizeRule()); }
	iv_ruleEvoUnequalSize=ruleEvoUnequalSize
	{ $current=$iv_ruleEvoUnequalSize.current; }
	EOF;

// Rule EvoUnequalSize
ruleEvoUnequalSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoUnequalSizeAccess().getEvoUnequalParserRuleCall_0());
		}
		this_EvoUnequal_0=ruleEvoUnequal
		{
			$current = $this_EvoUnequal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoUnequalSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoUnequal
entryRuleEvoUnequal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoUnequalRule()); }
	iv_ruleEvoUnequal=ruleEvoUnequal
	{ $current=$iv_ruleEvoUnequal.current; }
	EOF;

// Rule EvoUnequal
ruleEvoUnequal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoUnequalAccess().getEvoImplicationParserRuleCall_0());
		}
		this_EvoImplication_0=ruleEvoImplication
		{
			$current = $this_EvoImplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoUnequalAccess().getHyNotEqualExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='!='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoUnequalAccess().getExclamationMarkEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoUnequalAccess().getOperand2EvoImplicationSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoImplicationSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoUnequalRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoImplicationSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoImplicationSize
entryRuleEvoImplicationSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoImplicationSizeRule()); }
	iv_ruleEvoImplicationSize=ruleEvoImplicationSize
	{ $current=$iv_ruleEvoImplicationSize.current; }
	EOF;

// Rule EvoImplicationSize
ruleEvoImplicationSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoImplicationSizeAccess().getEvoImplicationParserRuleCall_0());
		}
		this_EvoImplication_0=ruleEvoImplication
		{
			$current = $this_EvoImplication_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoImplicationSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoImplication
entryRuleEvoImplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoImplicationRule()); }
	iv_ruleEvoImplication=ruleEvoImplication
	{ $current=$iv_ruleEvoImplication.current; }
	EOF;

// Rule EvoImplication
ruleEvoImplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoImplicationAccess().getEvoBiconditionalParserRuleCall_0());
		}
		this_EvoBiconditional_0=ruleEvoBiconditional
		{
			$current = $this_EvoBiconditional_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoImplicationAccess().getHyImpliesExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoImplicationAccess().getEqualsSignGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoImplicationAccess().getOperand2EvoBiconditionalSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoBiconditionalSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoImplicationRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoBiconditionalSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoBiconditionalSize
entryRuleEvoBiconditionalSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoBiconditionalSizeRule()); }
	iv_ruleEvoBiconditionalSize=ruleEvoBiconditionalSize
	{ $current=$iv_ruleEvoBiconditionalSize.current; }
	EOF;

// Rule EvoBiconditionalSize
ruleEvoBiconditionalSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoBiconditionalSizeAccess().getEvoBiconditionalParserRuleCall_0());
		}
		this_EvoBiconditional_0=ruleEvoBiconditional
		{
			$current = $this_EvoBiconditional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoBiconditionalSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoBiconditional
entryRuleEvoBiconditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoBiconditionalRule()); }
	iv_ruleEvoBiconditional=ruleEvoBiconditional
	{ $current=$iv_ruleEvoBiconditional.current; }
	EOF;

// Rule EvoBiconditional
ruleEvoBiconditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoBiconditionalAccess().getEvoSetInclusionParserRuleCall_0());
		}
		this_EvoSetInclusion_0=ruleEvoSetInclusion
		{
			$current = $this_EvoSetInclusion_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoBiconditionalAccess().getEvoBinaryExpressionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='<=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoBiconditionalAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoBiconditionalAccess().getOperand2EvoSetInclusionSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetInclusionSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoBiconditionalRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetInclusionSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetInclusionSize
entryRuleEvoSetInclusionSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetInclusionSizeRule()); }
	iv_ruleEvoSetInclusionSize=ruleEvoSetInclusionSize
	{ $current=$iv_ruleEvoSetInclusionSize.current; }
	EOF;

// Rule EvoSetInclusionSize
ruleEvoSetInclusionSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetInclusionSizeAccess().getEvoSetInclusionParserRuleCall_0());
		}
		this_EvoSetInclusion_0=ruleEvoSetInclusion
		{
			$current = $this_EvoSetInclusion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoSetInclusionSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoSetInclusion
entryRuleEvoSetInclusion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetInclusionRule()); }
	iv_ruleEvoSetInclusion=ruleEvoSetInclusion
	{ $current=$iv_ruleEvoSetInclusion.current; }
	EOF;

// Rule EvoSetInclusion
ruleEvoSetInclusion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetInclusionAccess().getEvoSetIntersectionParserRuleCall_0());
		}
		this_EvoSetIntersection_0=ruleEvoSetIntersection
		{
			$current = $this_EvoSetIntersection_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetInclusionAccess().getEvoSetInclusionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='inclusion'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetInclusionAccess().getInclusionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetInclusionAccess().getOperand2EvoSetIntersectionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetIntersection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetInclusionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetIntersection");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetIntersection
entryRuleEvoSetIntersection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetIntersectionRule()); }
	iv_ruleEvoSetIntersection=ruleEvoSetIntersection
	{ $current=$iv_ruleEvoSetIntersection.current; }
	EOF;

// Rule EvoSetIntersection
ruleEvoSetIntersection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetIntersectionAccess().getEvoSetUnionParserRuleCall_0());
		}
		this_EvoSetUnion_0=ruleEvoSetUnion
		{
			$current = $this_EvoSetUnion_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetIntersectionAccess().getEvoSetIntersectionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='intersection'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetIntersectionAccess().getIntersectionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetIntersectionAccess().getOperand2EvoSetUnionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetUnion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetIntersectionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetUnion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetUnion
entryRuleEvoSetUnion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetUnionRule()); }
	iv_ruleEvoSetUnion=ruleEvoSetUnion
	{ $current=$iv_ruleEvoSetUnion.current; }
	EOF;

// Rule EvoSetUnion
ruleEvoSetUnion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetUnionAccess().getEvoSetDifferenceParserRuleCall_0());
		}
		this_EvoSetDifference_0=ruleEvoSetDifference
		{
			$current = $this_EvoSetDifference_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetUnionAccess().getEvoSetUnionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='union'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetUnionAccess().getUnionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetUnionAccess().getOperand2EvoSetDifferenceParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetDifference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetUnionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetDifference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetDifference
entryRuleEvoSetDifference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetDifferenceRule()); }
	iv_ruleEvoSetDifference=ruleEvoSetDifference
	{ $current=$iv_ruleEvoSetDifference.current; }
	EOF;

// Rule EvoSetDifference
ruleEvoSetDifference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetDifferenceAccess().getEvoSetSymmetricDifferenceParserRuleCall_0());
		}
		this_EvoSetSymmetricDifference_0=ruleEvoSetSymmetricDifference
		{
			$current = $this_EvoSetSymmetricDifference_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetDifferenceAccess().getEvoSetDifferenceOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='difference'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetDifferenceAccess().getDifferenceKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetDifferenceAccess().getOperand2EvoSetSymmetricDifferenceParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetSymmetricDifference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetDifferenceRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetSymmetricDifference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetSymmetricDifference
entryRuleEvoSetSymmetricDifference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetSymmetricDifferenceRule()); }
	iv_ruleEvoSetSymmetricDifference=ruleEvoSetSymmetricDifference
	{ $current=$iv_ruleEvoSetSymmetricDifference.current; }
	EOF;

// Rule EvoSetSymmetricDifference
ruleEvoSetSymmetricDifference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetSymmetricDifferenceAccess().getEvoSetCartesianProductParserRuleCall_0());
		}
		this_EvoSetCartesianProduct_0=ruleEvoSetCartesianProduct
		{
			$current = $this_EvoSetCartesianProduct_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetSymmetricDifferenceAccess().getEvoSetSymmetricDifferenceOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='symmetric_difference'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetSymmetricDifferenceAccess().getSymmetric_differenceKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetSymmetricDifferenceAccess().getOperand2EvoSetCartesianProductParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetCartesianProduct
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetSymmetricDifferenceRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetCartesianProduct");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetCartesianProduct
entryRuleEvoSetCartesianProduct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetCartesianProductRule()); }
	iv_ruleEvoSetCartesianProduct=ruleEvoSetCartesianProduct
	{ $current=$iv_ruleEvoSetCartesianProduct.current; }
	EOF;

// Rule EvoSetCartesianProduct
ruleEvoSetCartesianProduct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetCartesianProductAccess().getEvoElementOfParserRuleCall_0());
		}
		this_EvoElementOf_0=ruleEvoElementOf
		{
			$current = $this_EvoElementOf_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetCartesianProductAccess().getEvoSetCartesianProductOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='x'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetCartesianProductAccess().getXKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetCartesianProductAccess().getOperand2EvoElementOfParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoElementOf
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetCartesianProductRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoElementOf");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetCardinality
entryRuleEvoSetCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetCardinalityRule()); }
	iv_ruleEvoSetCardinality=ruleEvoSetCardinality
	{ $current=$iv_ruleEvoSetCardinality.current; }
	EOF;

// Rule EvoSetCardinality
ruleEvoSetCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoSetCardinalityAccess().getEvoSetCardinalityAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='|'
				{
					newLeafNode(otherlv_1, grammarAccess.getEvoSetCardinalityAccess().getVerticalLineKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoSetCardinalityAccess().getOperandEvoExpressionParserRuleCall_1_0_1_0());
						}
						lv_operand_2_0=ruleEvoExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoSetCardinalityRule());
							}
							set(
								$current,
								"operand",
								lv_operand_2_0,
								"de.evorepair.logic.EvoLogicDsl.EvoExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='|'
				{
					newLeafNode(otherlv_3, grammarAccess.getEvoSetCardinalityAccess().getVerticalLineKeyword_1_0_2());
				}
			)
			    |
			(
				otherlv_4='size'
				{
					newLeafNode(otherlv_4, grammarAccess.getEvoSetCardinalityAccess().getSizeKeyword_1_1_0());
				}
				otherlv_5='('
				{
					newLeafNode(otherlv_5, grammarAccess.getEvoSetCardinalityAccess().getLeftParenthesisKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoSetCardinalityAccess().getOperandEvoExpressionParserRuleCall_1_1_2_0());
						}
						lv_operand_6_0=ruleEvoExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoSetCardinalityRule());
							}
							set(
								$current,
								"operand",
								lv_operand_6_0,
								"de.evorepair.logic.EvoLogicDsl.EvoExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=')'
				{
					newLeafNode(otherlv_7, grammarAccess.getEvoSetCardinalityAccess().getRightParenthesisKeyword_1_1_3());
				}
			)
		)
	)
;

// Entry rule entryRuleEvoElementOf
entryRuleEvoElementOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoElementOfRule()); }
	iv_ruleEvoElementOf=ruleEvoElementOf
	{ $current=$iv_ruleEvoElementOf.current; }
	EOF;

// Rule EvoElementOf
ruleEvoElementOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoElementOfAccess().getEvoTerminalParserRuleCall_0());
		}
		this_EvoTerminal_0=ruleEvoTerminal
		{
			$current = $this_EvoTerminal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoElementOfAccess().getEvoElementOfOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='elementOf'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoElementOfAccess().getElementOfKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoElementOfAccess().getOperand2EvoTerminalParserRuleCall_1_2_0_0());
						}
						lv_operand2_3_1=ruleEvoTerminal
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoElementOfRule());
							}
							set(
								$current,
								"operand2",
								lv_operand2_3_1,
								"de.evorepair.logic.EvoLogicDsl.EvoTerminal");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getEvoElementOfAccess().getOperand2EvoAllMappingTerminalParserRuleCall_1_2_0_1());
						}
						lv_operand2_3_2=ruleEvoAllMappingTerminal
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoElementOfRule());
							}
							set(
								$current,
								"operand2",
								lv_operand2_3_2,
								"de.evorepair.logic.EvoLogicDsl.EvoAllMappingTerminal");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getEvoElementOfAccess().getOperand2EvoAllConfigurationTerminalParserRuleCall_1_2_0_2());
						}
						lv_operand2_3_3=ruleEvoAllConfigurationTerminal
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoElementOfRule());
							}
							set(
								$current,
								"operand2",
								lv_operand2_3_3,
								"de.evorepair.logic.EvoLogicDsl.EvoAllConfigurationTerminal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoForAll
entryRuleEvoForAll returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoForAllRule()); }
	iv_ruleEvoForAll=ruleEvoForAll
	{ $current=$iv_ruleEvoForAll.current; }
	EOF;

// Rule EvoForAll
ruleEvoForAll returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='forAll'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoForAllAccess().getForAllKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoForAllAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoForAllAccess().getBoundedVariablesEvoVariableTermParserRuleCall_2_0());
				}
				lv_boundedVariables_2_0=ruleEvoVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoForAllRule());
					}
					add(
						$current,
						"boundedVariables",
						lv_boundedVariables_2_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getEvoForAllAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoForAllAccess().getBoundedVariablesEvoVariableTermParserRuleCall_3_1_0());
					}
					lv_boundedVariables_4_0=ruleEvoVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoForAllRule());
						}
						add(
							$current,
							"boundedVariables",
							lv_boundedVariables_4_0,
							"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getEvoForAllAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoForAllAccess().getOperandEvoExpressionParserRuleCall_5_0());
				}
				lv_operand_6_0=ruleEvoExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoForAllRule());
					}
					set(
						$current,
						"operand",
						lv_operand_6_0,
						"de.evorepair.logic.EvoLogicDsl.EvoExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getEvoForAllAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleEvoExists
entryRuleEvoExists returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoExistsRule()); }
	iv_ruleEvoExists=ruleEvoExists
	{ $current=$iv_ruleEvoExists.current; }
	EOF;

// Rule EvoExists
ruleEvoExists returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exists'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoExistsAccess().getExistsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoExistsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoExistsAccess().getBoundedVariablesEvoVariableTermParserRuleCall_2_0());
				}
				lv_boundedVariables_2_0=ruleEvoVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoExistsRule());
					}
					add(
						$current,
						"boundedVariables",
						lv_boundedVariables_2_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoExistsAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoExistsAccess().getOperandEvoExpressionParserRuleCall_4_0());
				}
				lv_operand_4_0=ruleEvoExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoExistsRule());
					}
					set(
						$current,
						"operand",
						lv_operand_4_0,
						"de.evorepair.logic.EvoLogicDsl.EvoExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getEvoExistsAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleEvoNot
entryRuleEvoNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoNotRule()); }
	iv_ruleEvoNot=ruleEvoNot
	{ $current=$iv_ruleEvoNot.current; }
	EOF;

// Rule EvoNot
ruleEvoNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='not'
			{
				newLeafNode(otherlv_0, grammarAccess.getEvoNotAccess().getNotKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEvoNotAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoNotAccess().getOperandEvoExpressionParserRuleCall_0_2_0());
					}
					lv_operand_2_0=ruleEvoExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoNotRule());
						}
						set(
							$current,
							"operand",
							lv_operand_2_0,
							"de.evorepair.logic.EvoLogicDsl.EvoExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getEvoNotAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_4='!'
			{
				newLeafNode(otherlv_4, grammarAccess.getEvoNotAccess().getExclamationMarkKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoNotAccess().getOperandEvoVariableTermParserRuleCall_1_1_0());
					}
					lv_operand_5_0=ruleEvoVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoNotRule());
						}
						set(
							$current,
							"operand",
							lv_operand_5_0,
							"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleEvoSatisfiable
entryRuleEvoSatisfiable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSatisfiableRule()); }
	iv_ruleEvoSatisfiable=ruleEvoSatisfiable
	{ $current=$iv_ruleEvoSatisfiable.current; }
	EOF;

// Rule EvoSatisfiable
ruleEvoSatisfiable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoSatisfiableAccess().getEvoSatisfiableAction_0(),
					$current);
			}
		)
		otherlv_1='satisfiable'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoSatisfiableAccess().getSatisfiableKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoSatisfiableAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSatisfiableAccess().getVariablesEvoSetVariableParserRuleCall_3_0_0());
					}
					lv_variables_3_1=ruleEvoSetVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSatisfiableRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_1,
							"de.evorepair.logic.EvoLogicDsl.EvoSetVariable");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEvoSatisfiableAccess().getVariablesEvoApplicationConstraintTermParserRuleCall_3_0_1());
					}
					lv_variables_3_2=ruleEvoApplicationConstraintTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSatisfiableRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_2,
							"de.evorepair.logic.EvoLogicDsl.EvoApplicationConstraintTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEvoSatisfiableAccess().getCommaKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoSatisfiableAccess().getVariablesEvoSetVariableParserRuleCall_4_1_0_0());
						}
						lv_variables_5_1=ruleEvoSetVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoSatisfiableRule());
							}
							add(
								$current,
								"variables",
								lv_variables_5_1,
								"de.evorepair.logic.EvoLogicDsl.EvoSetVariable");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getEvoSatisfiableAccess().getVariablesEvoApplicationConstraintTermParserRuleCall_4_1_0_1());
						}
						lv_variables_5_2=ruleEvoApplicationConstraintTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoSatisfiableRule());
							}
							add(
								$current,
								"variables",
								lv_variables_5_2,
								"de.evorepair.logic.EvoLogicDsl.EvoApplicationConstraintTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getEvoSatisfiableAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleEvoTerminal
entryRuleEvoTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoTerminalRule()); }
	iv_ruleEvoTerminal=ruleEvoTerminal
	{ $current=$iv_ruleEvoTerminal.current; }
	EOF;

// Rule EvoTerminal
ruleEvoTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoVariableTermParserRuleCall_0());
		}
		this_EvoVariableTerm_0=ruleEvoVariableTerm
		{
			$current = $this_EvoVariableTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoSetTermParserRuleCall_1());
		}
		this_EvoSetTerm_1=ruleEvoSetTerm
		{
			$current = $this_EvoSetTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoApplicationConstraintTermParserRuleCall_2());
		}
		this_EvoApplicationConstraintTerm_2=ruleEvoApplicationConstraintTerm
		{
			$current = $this_EvoApplicationConstraintTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoForAllParserRuleCall_3());
		}
		this_EvoForAll_3=ruleEvoForAll
		{
			$current = $this_EvoForAll_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoExistsParserRuleCall_4());
		}
		this_EvoExists_4=ruleEvoExists
		{
			$current = $this_EvoExists_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoNotParserRuleCall_5());
		}
		this_EvoNot_5=ruleEvoNot
		{
			$current = $this_EvoNot_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoFeatureTypeParserRuleCall_6());
		}
		this_EvoFeatureType_6=ruleEvoFeatureType
		{
			$current = $this_EvoFeatureType_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoGroupTypeParserRuleCall_7());
		}
		this_EvoGroupType_7=ruleEvoGroupType
		{
			$current = $this_EvoGroupType_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoSetCardinalityParserRuleCall_8());
		}
		this_EvoSetCardinality_8=ruleEvoSetCardinality
		{
			$current = $this_EvoSetCardinality_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoChildrenOfParserRuleCall_9());
		}
		this_EvoChildrenOf_9=ruleEvoChildrenOf
		{
			$current = $this_EvoChildrenOf_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoParentOfParserRuleCall_10());
		}
		this_EvoParentOf_10=ruleEvoParentOf
		{
			$current = $this_EvoParentOf_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoSiblingsOfParserRuleCall_11());
		}
		this_EvoSiblingsOf_11=ruleEvoSiblingsOf
		{
			$current = $this_EvoSiblingsOf_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoSatisfiableParserRuleCall_12());
		}
		this_EvoSatisfiable_12=ruleEvoSatisfiable
		{
			$current = $this_EvoSatisfiable_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getEvoTerminalAccess().getLeftParenthesisKeyword_13_0());
			}
			{
				newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoXOrParserRuleCall_13_1());
			}
			this_EvoXOr_14=ruleEvoXOr
			{
				$current = $this_EvoXOr_14.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getEvoTerminalAccess().getRightParenthesisKeyword_13_2());
			}
		)
	)
;

// Entry rule entryRuleEvoAllMappingTerminal
entryRuleEvoAllMappingTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoAllMappingTerminalRule()); }
	iv_ruleEvoAllMappingTerminal=ruleEvoAllMappingTerminal
	{ $current=$iv_ruleEvoAllMappingTerminal.current; }
	EOF;

// Rule EvoAllMappingTerminal
ruleEvoAllMappingTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoAllMappingTerminalAccess().getEvoAllMappingsAction_0(),
					$current);
			}
		)
		otherlv_1='All_Mappings'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoAllMappingTerminalAccess().getAll_MappingsKeyword_1());
		}
	)
;

// Entry rule entryRuleEvoAllConfigurationTerminal
entryRuleEvoAllConfigurationTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoAllConfigurationTerminalRule()); }
	iv_ruleEvoAllConfigurationTerminal=ruleEvoAllConfigurationTerminal
	{ $current=$iv_ruleEvoAllConfigurationTerminal.current; }
	EOF;

// Rule EvoAllConfigurationTerminal
ruleEvoAllConfigurationTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoAllConfigurationTerminalAccess().getEvoAllConfigurationsAction_0(),
					$current);
			}
		)
		otherlv_1='All_Configurations'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoAllConfigurationTerminalAccess().getAll_ConfigurationsKeyword_1());
		}
	)
;

// Entry rule entryRuleEvoSize
entryRuleEvoSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSizeRule()); }
	iv_ruleEvoSize=ruleEvoSize
	{ $current=$iv_ruleEvoSize.current; }
	EOF;

// Rule EvoSize
ruleEvoSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoSizeAccess().getEvoSizeAction_0(),
					$current);
			}
		)
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getEvoSizeAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoSizeRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleEvoVariableTerm
entryRuleEvoVariableTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoVariableTermRule()); }
	iv_ruleEvoVariableTerm=ruleEvoVariableTerm
	{ $current=$iv_ruleEvoVariableTerm.current; }
	EOF;

// Rule EvoVariableTerm
ruleEvoVariableTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoVariableTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoVariableTermAccess().getVariableEvoVariableCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoVariableTermAccess().getTypeEvoVariableTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleEvoVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoVariableTermRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEvoApplicationConstraintTerm
entryRuleEvoApplicationConstraintTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoApplicationConstraintTermRule()); }
	iv_ruleEvoApplicationConstraintTerm=ruleEvoApplicationConstraintTerm
	{ $current=$iv_ruleEvoApplicationConstraintTerm.current; }
	EOF;

// Rule EvoApplicationConstraintTerm
ruleEvoApplicationConstraintTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AC'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoApplicationConstraintTermAccess().getACKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoApplicationConstraintTermAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoApplicationConstraintTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoApplicationConstraintTermAccess().getVariableEvoMappingVariableCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoApplicationConstraintTermAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoFeatureType
entryRuleEvoFeatureType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoFeatureTypeRule()); }
	iv_ruleEvoFeatureType=ruleEvoFeatureType
	{ $current=$iv_ruleEvoFeatureType.current; }
	EOF;

// Rule EvoFeatureType
ruleEvoFeatureType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoFeatureTypeAccess().getEvoFeatureTypeAction_0(),
					$current);
			}
		)
		otherlv_1='featureType'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoFeatureTypeAccess().getFeatureTypeKeyword_1());
		}
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoFeatureTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoFeatureTypeAccess().getVariablesEvoVariableTermParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleEvoVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoFeatureTypeRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getEvoFeatureTypeAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoFeatureTypeAccess().getVariablesEvoVariableTermParserRuleCall_2_2_1_0());
						}
						lv_variables_5_0=ruleEvoVariableTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoFeatureTypeRule());
							}
							add(
								$current,
								"variables",
								lv_variables_5_0,
								"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvoFeatureTypeAccess().getRightParenthesisKeyword_2_3());
			}
		)
		otherlv_7='=='
		{
			newLeafNode(otherlv_7, grammarAccess.getEvoFeatureTypeAccess().getEqualsSignEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoFeatureTypeAccess().getTypeHyFeatureTypeEnumEnumRuleCall_4_0());
				}
				lv_type_8_0=ruleHyFeatureTypeEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoFeatureTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_8_0,
						"de.evorepair.logic.EvoLogicDsl.HyFeatureTypeEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvoGroupType
entryRuleEvoGroupType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoGroupTypeRule()); }
	iv_ruleEvoGroupType=ruleEvoGroupType
	{ $current=$iv_ruleEvoGroupType.current; }
	EOF;

// Rule EvoGroupType
ruleEvoGroupType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoGroupTypeAccess().getEvoGroupTypeAction_0(),
					$current);
			}
		)
		otherlv_1='groupType'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoGroupTypeAccess().getGroupTypeKeyword_1());
		}
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoGroupTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoGroupTypeAccess().getVariablesEvoGroupTermParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleEvoGroupTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoGroupTypeRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoGroupTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getEvoGroupTypeAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvoGroupTypeAccess().getVariablesEvoGroupTermParserRuleCall_2_2_1_0());
						}
						lv_variables_5_0=ruleEvoGroupTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvoGroupTypeRule());
							}
							add(
								$current,
								"variables",
								lv_variables_5_0,
								"de.evorepair.logic.EvoLogicDsl.EvoGroupTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvoGroupTypeAccess().getRightParenthesisKeyword_2_3());
			}
		)
		otherlv_7='=='
		{
			newLeafNode(otherlv_7, grammarAccess.getEvoGroupTypeAccess().getEqualsSignEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoGroupTypeAccess().getTypeHyGroupTypeEnumEnumRuleCall_4_0());
				}
				lv_type_8_0=ruleHyGroupTypeEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoGroupTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_8_0,
						"de.evorepair.logic.EvoLogicDsl.HyGroupTypeEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvoGroupTerm
entryRuleEvoGroupTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoGroupTermRule()); }
	iv_ruleEvoGroupTerm=ruleEvoGroupTerm
	{ $current=$iv_ruleEvoGroupTerm.current; }
	EOF;

// Rule EvoGroupTerm
ruleEvoGroupTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoGroupTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoGroupTermAccess().getVariableEvoGroupVariableCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoGroupTermAccess().getTypeEvoVariableTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleEvoVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoGroupTermRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEvoSetTerm
entryRuleEvoSetTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetTermRule()); }
	iv_ruleEvoSetTerm=ruleEvoSetTerm
	{ $current=$iv_ruleEvoSetTerm.current; }
	EOF;

// Rule EvoSetTerm
ruleEvoSetTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoSetTermAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoSetTermAccess().getVariablesEvoSetVariableParserRuleCall_1_0());
				}
				lv_variables_1_0=ruleEvoSetVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoSetTermRule());
					}
					add(
						$current,
						"variables",
						lv_variables_1_0,
						"de.evorepair.logic.EvoLogicDsl.EvoSetVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetTermAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetTermAccess().getVariablesEvoSetVariableParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleEvoSetVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetTermRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEvoSetTermAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoSetVariable
entryRuleEvoSetVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetVariableRule()); }
	iv_ruleEvoSetVariable=ruleEvoSetVariable
	{ $current=$iv_ruleEvoSetVariable.current; }
	EOF;

// Rule EvoSetVariable
ruleEvoSetVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetVariableAccess().getEvoVariableTermParserRuleCall_0());
		}
		this_EvoVariableTerm_0=ruleEvoVariableTerm
		{
			$current = $this_EvoVariableTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoSetVariableAccess().getEvoSetTermParserRuleCall_1());
		}
		this_EvoSetTerm_1=ruleEvoSetTerm
		{
			$current = $this_EvoSetTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoSetVariableAccess().getEvoNotParserRuleCall_2());
		}
		this_EvoNot_2=ruleEvoNot
		{
			$current = $this_EvoNot_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoParentOf
entryRuleEvoParentOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoParentOfRule()); }
	iv_ruleEvoParentOf=ruleEvoParentOf
	{ $current=$iv_ruleEvoParentOf.current; }
	EOF;

// Rule EvoParentOf
ruleEvoParentOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='parentOf'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoParentOfAccess().getParentOfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoParentOfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoParentOfAccess().getVariableEvoVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleEvoVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoParentOfRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoParentOfAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoSiblingsOf
entryRuleEvoSiblingsOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSiblingsOfRule()); }
	iv_ruleEvoSiblingsOf=ruleEvoSiblingsOf
	{ $current=$iv_ruleEvoSiblingsOf.current; }
	EOF;

// Rule EvoSiblingsOf
ruleEvoSiblingsOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sibilingsOf'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoSiblingsOfAccess().getSibilingsOfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoSiblingsOfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoSiblingsOfAccess().getVariableEvoVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleEvoVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoSiblingsOfRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoSiblingsOfAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoChildrenOf
entryRuleEvoChildrenOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoChildrenOfRule()); }
	iv_ruleEvoChildrenOf=ruleEvoChildrenOf
	{ $current=$iv_ruleEvoChildrenOf.current; }
	EOF;

// Rule EvoChildrenOf
ruleEvoChildrenOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='childrenOf'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoChildrenOfAccess().getChildrenOfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoChildrenOfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoChildrenOfAccess().getVariableEvoVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleEvoVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoChildrenOfRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoChildrenOfAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Rule EvoMappingRelativeVersionRestrictionOperator
ruleEvoMappingRelativeVersionRestrictionOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getLessThanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getLessThanEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getLessThanOrEqualEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getLessThanOrEqualEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='='
			{
				$current = grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getEqualEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>='
			{
				$current = grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getGreaterThanOrEqualEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getGreaterThanOrEqualEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>'
			{
				$current = grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getGreaterThanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEvoMappingRelativeVersionRestrictionOperatorAccess().getGreaterThanEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule EvoVariableType
ruleEvoVariableType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='@ident'
			{
				$current = grammarAccess.getEvoVariableTypeAccess().getEvoIdentifierEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEvoVariableTypeAccess().getEvoIdentifierEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='@pre'
			{
				$current = grammarAccess.getEvoVariableTypeAccess().getEvoSourceEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEvoVariableTypeAccess().getEvoSourceEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='@post'
			{
				$current = grammarAccess.getEvoVariableTypeAccess().getEvoTargetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEvoVariableTypeAccess().getEvoTargetEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule HyFeatureTypeEnum
ruleHyFeatureTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='optional'
			{
				$current = grammarAccess.getHyFeatureTypeEnumAccess().getOPTIONALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHyFeatureTypeEnumAccess().getOPTIONALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='mandatory'
			{
				$current = grammarAccess.getHyFeatureTypeEnumAccess().getMANDATORYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHyFeatureTypeEnumAccess().getMANDATORYEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule HyGroupTypeEnum
ruleHyGroupTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='and'
			{
				$current = grammarAccess.getHyGroupTypeEnumAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHyGroupTypeEnumAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='or'
			{
				$current = grammarAccess.getHyGroupTypeEnumAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHyGroupTypeEnumAccess().getOREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='alternative'
			{
				$current = grammarAccess.getHyGroupTypeEnumAccess().getALTERNATIVEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHyGroupTypeEnumAccess().getALTERNATIVEEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DATE : '0'..'9' '/' ('0'|'1') '0'..'9' '/' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
