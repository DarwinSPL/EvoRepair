/*
 * generated by Xtext 2.12.0
 */
grammar InternalExpressionDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.evorepair.feature.expression.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.evorepair.feature.expression.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.evorepair.feature.expression.services.ExpressionDslGrammarAccess;

}

@parser::members {

 	private ExpressionDslGrammarAccess grammarAccess;

    public InternalExpressionDslParser(TokenStream input, ExpressionDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GrammarEntry";
   	}

   	@Override
   	protected ExpressionDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGrammarEntry
entryRuleGrammarEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGrammarEntryRule()); }
	iv_ruleGrammarEntry=ruleGrammarEntry
	{ $current=$iv_ruleGrammarEntry.current; }
	EOF;

// Rule GrammarEntry
ruleGrammarEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getGrammarEntryAccess().getExpressionEvoExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleEvoExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getGrammarEntryRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"de.evorepair.feature.expression.ExpressionDsl.EvoExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEvoExpression
entryRuleEvoExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoExpressionRule()); }
	iv_ruleEvoExpression=ruleEvoExpression
	{ $current=$iv_ruleEvoExpression.current; }
	EOF;

// Rule EvoExpression
ruleEvoExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEvoExpressionAccess().getEvoOrParserRuleCall());
	}
	this_EvoOr_0=ruleEvoOr
	{
		$current = $this_EvoOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEvoElementOf
entryRuleEvoElementOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoElementOfRule()); }
	iv_ruleEvoElementOf=ruleEvoElementOf
	{ $current=$iv_ruleEvoElementOf.current; }
	EOF;

// Rule EvoElementOf
ruleEvoElementOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoElementOfAccess().getEvoTerminalParserRuleCall_0());
		}
		this_EvoTerminal_0=ruleEvoTerminal
		{
			$current = $this_EvoTerminal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoElementOfAccess().getEvoSetElementOfOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='elementOf'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoElementOfAccess().getElementOfKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoElementOfAccess().getOperand2EvoTerminalParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoElementOfRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.ExpressionDsl.EvoTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoTerminal
entryRuleEvoTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoTerminalRule()); }
	iv_ruleEvoTerminal=ruleEvoTerminal
	{ $current=$iv_ruleEvoTerminal.current; }
	EOF;

// Rule EvoTerminal
ruleEvoTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoFeatureReferenceExpressionParserRuleCall_0());
		}
		this_EvoFeatureReferenceExpression_0=ruleEvoFeatureReferenceExpression
		{
			$current = $this_EvoFeatureReferenceExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoTerminalAccess().getEvoNestedExpressionParserRuleCall_1());
		}
		this_EvoNestedExpression_1=ruleEvoNestedExpression
		{
			$current = $this_EvoNestedExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleEvoNestedExpression
entryRuleEvoNestedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoNestedExpressionRule()); }
	iv_ruleEvoNestedExpression=ruleEvoNestedExpression
	{ $current=$iv_ruleEvoNestedExpression.current; }
	EOF;

// Rule EvoNestedExpression
ruleEvoNestedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoNestedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoNestedExpressionAccess().getOperandEvoExpressionParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleEvoExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoNestedExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"de.evorepair.feature.expression.ExpressionDsl.EvoExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoNestedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleEvoImplication
entryRuleEvoImplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoImplicationRule()); }
	iv_ruleEvoImplication=ruleEvoImplication
	{ $current=$iv_ruleEvoImplication.current; }
	EOF;

// Rule EvoImplication
ruleEvoImplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoImplicationAccess().getEvoBiconditionalParserRuleCall_0());
		}
		this_EvoBiconditional_0=ruleEvoBiconditional
		{
			$current = $this_EvoBiconditional_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoImplicationAccess().getEvoImplicationOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoImplicationAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoImplicationAccess().getOperand2EvoBiconditionalSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoBiconditionalSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoImplicationRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoBiconditionalSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoFeatureReferenceExpression
entryRuleEvoFeatureReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoFeatureReferenceExpressionRule()); }
	iv_ruleEvoFeatureReferenceExpression=ruleEvoFeatureReferenceExpression
	{ $current=$iv_ruleEvoFeatureReferenceExpression.current; }
	EOF;

// Rule EvoFeatureReferenceExpression
ruleEvoFeatureReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEvoFeatureReferenceExpressionRule());
				}
			}
			otherlv_0=RULE_STRING
			{
				newLeafNode(otherlv_0, grammarAccess.getEvoFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleEvoVersionRestriction
entryRuleEvoVersionRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoVersionRestrictionRule()); }
	iv_ruleEvoVersionRestriction=ruleEvoVersionRestriction
	{ $current=$iv_ruleEvoVersionRestriction.current; }
	EOF;

// Rule EvoVersionRestriction
ruleEvoVersionRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoVersionRestrictionAccess().getEvoRelativeVersionRestrictionParserRuleCall_0());
		}
		this_EvoRelativeVersionRestriction_0=ruleEvoRelativeVersionRestriction
		{
			$current = $this_EvoRelativeVersionRestriction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoVersionRestrictionAccess().getEvoVersionRangeRestrictionParserRuleCall_1());
		}
		this_EvoVersionRangeRestriction_1=ruleEvoVersionRangeRestriction
		{
			$current = $this_EvoVersionRangeRestriction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoRelativeVersionRestriction
entryRuleEvoRelativeVersionRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoRelativeVersionRestrictionRule()); }
	iv_ruleEvoRelativeVersionRestriction=ruleEvoRelativeVersionRestriction
	{ $current=$iv_ruleEvoRelativeVersionRestriction.current; }
	EOF;

// Rule EvoRelativeVersionRestriction
ruleEvoRelativeVersionRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoRelativeVersionRestrictionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoRelativeVersionRestrictionAccess().getOperatorEvoRelativeVersionRestrictionOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleEvoRelativeVersionRestrictionOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoRelativeVersionRestrictionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"de.evorepair.feature.expression.ExpressionDsl.EvoRelativeVersionRestrictionOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoRelativeVersionRestrictionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEvoRelativeVersionRestrictionAccess().getVersionHyVersionCrossReference_2_0());
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoRelativeVersionRestrictionAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoVersionRangeRestriction
entryRuleEvoVersionRangeRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoVersionRangeRestrictionRule()); }
	iv_ruleEvoVersionRangeRestriction=ruleEvoVersionRangeRestriction
	{ $current=$iv_ruleEvoVersionRangeRestriction.current; }
	EOF;

// Rule EvoVersionRangeRestriction
ruleEvoVersionRangeRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='['
			{
				newLeafNode(otherlv_0, grammarAccess.getEvoVersionRangeRestrictionAccess().getLeftSquareBracketKeyword_0_0());
			}
			(
				(
					lv_lowerIncluded_1_0='true'
					{
						newLeafNode(lv_lowerIncluded_1_0, grammarAccess.getEvoVersionRangeRestrictionAccess().getLowerIncludedTrueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoVersionRangeRestrictionRule());
						}
						setWithLastConsumed($current, "lowerIncluded", true, "true");
					}
				)
			)
		)
		    |
		(
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoVersionRangeRestrictionAccess().getFalseKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoVersionRangeRestrictionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEvoVersionRangeRestrictionAccess().getLowerVersionHyVersionCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='-'
			{
				newLeafNode(otherlv_4, grammarAccess.getEvoVersionRangeRestrictionAccess().getHyphenMinusKeyword_1_2());
			}
			(
				(
					lv_upperIncluded_5_0='true'
					{
						newLeafNode(lv_upperIncluded_5_0, grammarAccess.getEvoVersionRangeRestrictionAccess().getUpperIncludedTrueKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoVersionRangeRestrictionRule());
						}
						setWithLastConsumed($current, "upperIncluded", true, "true");
					}
				)
			)
		)
		    |
		(
			otherlv_6='false'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvoVersionRangeRestrictionAccess().getFalseKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoVersionRangeRestrictionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEvoVersionRangeRestrictionAccess().getUpperVersionHyVersionCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getEvoVersionRangeRestrictionAccess().getRightSquareBracketKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleEvoValue
entryRuleEvoValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoValueRule()); }
	iv_ruleEvoValue=ruleEvoValue
	{ $current=$iv_ruleEvoValue.current; }
	EOF;

// Rule EvoValue
ruleEvoValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoValueAccess().getEvoNumberValueParserRuleCall_0());
		}
		this_EvoNumberValue_0=ruleEvoNumberValue
		{
			$current = $this_EvoNumberValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoValueAccess().getEvoBooleanValueParserRuleCall_1());
		}
		this_EvoBooleanValue_1=ruleEvoBooleanValue
		{
			$current = $this_EvoBooleanValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoNumberValue
entryRuleEvoNumberValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoNumberValueRule()); }
	iv_ruleEvoNumberValue=ruleEvoNumberValue
	{ $current=$iv_ruleEvoNumberValue.current; }
	EOF;

// Rule EvoNumberValue
ruleEvoNumberValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getEvoNumberValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEvoNumberValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleEvoBooleanValue
entryRuleEvoBooleanValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoBooleanValueRule()); }
	iv_ruleEvoBooleanValue=ruleEvoBooleanValue
	{ $current=$iv_ruleEvoBooleanValue.current; }
	EOF;

// Rule EvoBooleanValue
ruleEvoBooleanValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoBooleanValueAccess().getHyBooleanValueAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_0='true'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getEvoBooleanValueAccess().getValueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvoBooleanValueRule());
						}
						setWithLastConsumed($current, "value", true, "true");
					}
				)
			)
			    |
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoBooleanValueAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleEvoEnumLiteral
entryRuleEvoEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoEnumLiteralRule()); }
	iv_ruleEvoEnumLiteral=ruleEvoEnumLiteral
	{ $current=$iv_ruleEvoEnumLiteral.current; }
	EOF;

// Rule EvoEnumLiteral
ruleEvoEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnumLiteral('
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoEnumLiteralAccess().getEnumLiteralKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEvoEnumLiteralAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoEnumLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getEvoEnumLiteralAccess().getCommaKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_INT
				{
					newLeafNode(lv_value_3_0, grammarAccess.getEvoEnumLiteralAccess().getValueINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoEnumLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getEvoEnumLiteralAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getEvoEnumLiteralAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					(
						(
							lv_validSince_6_0=RULE_DATE
							{
								newLeafNode(lv_validSince_6_0, grammarAccess.getEvoEnumLiteralAccess().getValidSinceDATETerminalRuleCall_5_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validSince",
									lv_validSince_6_0,
									"de.evorepair.feature.expression.ExpressionDsl.DATE");
							}
						)
					)
					otherlv_7='-'
					{
						newLeafNode(otherlv_7, grammarAccess.getEvoEnumLiteralAccess().getHyphenMinusKeyword_5_1_0_1());
					}
					(
						(
							lv_validUntil_8_0=RULE_DATE
							{
								newLeafNode(lv_validUntil_8_0, grammarAccess.getEvoEnumLiteralAccess().getValidUntilDATETerminalRuleCall_5_1_0_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validUntil",
									lv_validUntil_8_0,
									"de.evorepair.feature.expression.ExpressionDsl.DATE");
							}
						)
					)
				)
				    |
				(
					(
						(
							lv_validSince_9_0=RULE_DATE
							{
								newLeafNode(lv_validSince_9_0, grammarAccess.getEvoEnumLiteralAccess().getValidSinceDATETerminalRuleCall_5_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validSince",
									lv_validSince_9_0,
									"de.evorepair.feature.expression.ExpressionDsl.DATE");
							}
						)
					)
					otherlv_10='-'
					{
						newLeafNode(otherlv_10, grammarAccess.getEvoEnumLiteralAccess().getHyphenMinusKeyword_5_1_1_1());
					}
				)
				    |
				(
					otherlv_11='eternity'
					{
						newLeafNode(otherlv_11, grammarAccess.getEvoEnumLiteralAccess().getEternityKeyword_5_1_2_0());
					}
					otherlv_12='-'
					{
						newLeafNode(otherlv_12, grammarAccess.getEvoEnumLiteralAccess().getHyphenMinusKeyword_5_1_2_1());
					}
					(
						(
							lv_validUntil_13_0=RULE_DATE
							{
								newLeafNode(lv_validUntil_13_0, grammarAccess.getEvoEnumLiteralAccess().getValidUntilDATETerminalRuleCall_5_1_2_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEvoEnumLiteralRule());
								}
								setWithLastConsumed(
									$current,
									"validUntil",
									lv_validUntil_13_0,
									"de.evorepair.feature.expression.ExpressionDsl.DATE");
							}
						)
					)
				)
			)
			otherlv_14=']'
			{
				newLeafNode(otherlv_14, grammarAccess.getEvoEnumLiteralAccess().getRightSquareBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleEvoOr
entryRuleEvoOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoOrRule()); }
	iv_ruleEvoOr=ruleEvoOr
	{ $current=$iv_ruleEvoOr.current; }
	EOF;

// Rule EvoOr
ruleEvoOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoOrAccess().getEvoAndParserRuleCall_0());
		}
		this_EvoAnd_0=ruleEvoAnd
		{
			$current = $this_EvoAnd_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoOrAccess().getEvoOrOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoOrAccess().getOperand2EvoAndParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoOrRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoAnd
entryRuleEvoAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoAndRule()); }
	iv_ruleEvoAnd=ruleEvoAnd
	{ $current=$iv_ruleEvoAnd.current; }
	EOF;

// Rule EvoAnd
ruleEvoAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoAndAccess().getEvoEqualParserRuleCall_0());
		}
		this_EvoEqual_0=ruleEvoEqual
		{
			$current = $this_EvoEqual_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoAndAccess().getEvoAndOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoAndAccess().getOperand2EvoEqualParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoEqual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoAndRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoEqual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoEqual
entryRuleEvoEqual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoEqualRule()); }
	iv_ruleEvoEqual=ruleEvoEqual
	{ $current=$iv_ruleEvoEqual.current; }
	EOF;

// Rule EvoEqual
ruleEvoEqual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoEqualAccess().getEvoUnequalParserRuleCall_0());
		}
		this_EvoUnequal_0=ruleEvoUnequal
		{
			$current = $this_EvoUnequal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoEqualAccess().getEvoEqualOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='=='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoEqualAccess().getEqualsSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoEqualAccess().getOperand2EvoUnequalSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoUnequalSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoEqualRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoUnequalSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoUnequalSize
entryRuleEvoUnequalSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoUnequalSizeRule()); }
	iv_ruleEvoUnequalSize=ruleEvoUnequalSize
	{ $current=$iv_ruleEvoUnequalSize.current; }
	EOF;

// Rule EvoUnequalSize
ruleEvoUnequalSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoUnequalSizeAccess().getEvoUnequalParserRuleCall_0());
		}
		this_EvoUnequal_0=ruleEvoUnequal
		{
			$current = $this_EvoUnequal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoUnequalSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoUnequal
entryRuleEvoUnequal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoUnequalRule()); }
	iv_ruleEvoUnequal=ruleEvoUnequal
	{ $current=$iv_ruleEvoUnequal.current; }
	EOF;

// Rule EvoUnequal
ruleEvoUnequal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoUnequalAccess().getEvoImplicationParserRuleCall_0());
		}
		this_EvoImplication_0=ruleEvoImplication
		{
			$current = $this_EvoImplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoUnequalAccess().getEvoUnequalOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='!='
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoUnequalAccess().getExclamationMarkEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoUnequalAccess().getOperand2EvoImplicationSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoImplicationSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoUnequalRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoImplicationSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoImplicationSize
entryRuleEvoImplicationSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoImplicationSizeRule()); }
	iv_ruleEvoImplicationSize=ruleEvoImplicationSize
	{ $current=$iv_ruleEvoImplicationSize.current; }
	EOF;

// Rule EvoImplicationSize
ruleEvoImplicationSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoImplicationSizeAccess().getEvoImplicationParserRuleCall_0());
		}
		this_EvoImplication_0=ruleEvoImplication
		{
			$current = $this_EvoImplication_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoImplicationSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoBiconditionalSize
entryRuleEvoBiconditionalSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoBiconditionalSizeRule()); }
	iv_ruleEvoBiconditionalSize=ruleEvoBiconditionalSize
	{ $current=$iv_ruleEvoBiconditionalSize.current; }
	EOF;

// Rule EvoBiconditionalSize
ruleEvoBiconditionalSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoBiconditionalSizeAccess().getEvoBiconditionalParserRuleCall_0());
		}
		this_EvoBiconditional_0=ruleEvoBiconditional
		{
			$current = $this_EvoBiconditional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoBiconditionalSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoBiconditional
entryRuleEvoBiconditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoBiconditionalRule()); }
	iv_ruleEvoBiconditional=ruleEvoBiconditional
	{ $current=$iv_ruleEvoBiconditional.current; }
	EOF;

// Rule EvoBiconditional
ruleEvoBiconditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoBiconditionalAccess().getEvoSetInclusionParserRuleCall_0());
		}
		this_EvoSetInclusion_0=ruleEvoSetInclusion
		{
			$current = $this_EvoSetInclusion_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoBiconditionalAccess().getEvoBiconditionalOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='<=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoBiconditionalAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoBiconditionalAccess().getOperand2EvoSetInclusionSizeParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetInclusionSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoBiconditionalRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetInclusionSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetInclusionSize
entryRuleEvoSetInclusionSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetInclusionSizeRule()); }
	iv_ruleEvoSetInclusionSize=ruleEvoSetInclusionSize
	{ $current=$iv_ruleEvoSetInclusionSize.current; }
	EOF;

// Rule EvoSetInclusionSize
ruleEvoSetInclusionSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetInclusionSizeAccess().getEvoSetInclusionParserRuleCall_0());
		}
		this_EvoSetInclusion_0=ruleEvoSetInclusion
		{
			$current = $this_EvoSetInclusion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoSetInclusionSizeAccess().getEvoSizeParserRuleCall_1());
		}
		this_EvoSize_1=ruleEvoSize
		{
			$current = $this_EvoSize_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEvoSetInclusion
entryRuleEvoSetInclusion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetInclusionRule()); }
	iv_ruleEvoSetInclusion=ruleEvoSetInclusion
	{ $current=$iv_ruleEvoSetInclusion.current; }
	EOF;

// Rule EvoSetInclusion
ruleEvoSetInclusion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetInclusionAccess().getEvoSetIntersectionParserRuleCall_0());
		}
		this_EvoSetIntersection_0=ruleEvoSetIntersection
		{
			$current = $this_EvoSetIntersection_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetInclusionAccess().getEvoSetInclusionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='inclusion'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetInclusionAccess().getInclusionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetInclusionAccess().getOperand2EvoSetIntersectionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetIntersection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetInclusionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetIntersection");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetIntersection
entryRuleEvoSetIntersection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetIntersectionRule()); }
	iv_ruleEvoSetIntersection=ruleEvoSetIntersection
	{ $current=$iv_ruleEvoSetIntersection.current; }
	EOF;

// Rule EvoSetIntersection
ruleEvoSetIntersection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetIntersectionAccess().getEvoSetUnionParserRuleCall_0());
		}
		this_EvoSetUnion_0=ruleEvoSetUnion
		{
			$current = $this_EvoSetUnion_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetIntersectionAccess().getEvoSetIntersectionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='intersection'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetIntersectionAccess().getIntersectionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetIntersectionAccess().getOperand2EvoSetUnionParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetUnion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetIntersectionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetUnion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetUnion
entryRuleEvoSetUnion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetUnionRule()); }
	iv_ruleEvoSetUnion=ruleEvoSetUnion
	{ $current=$iv_ruleEvoSetUnion.current; }
	EOF;

// Rule EvoSetUnion
ruleEvoSetUnion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetUnionAccess().getEvoSetDifferenceParserRuleCall_0());
		}
		this_EvoSetDifference_0=ruleEvoSetDifference
		{
			$current = $this_EvoSetDifference_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetUnionAccess().getEvoSetUnionOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='union'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetUnionAccess().getUnionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetUnionAccess().getOperand2EvoSetDifferenceParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetDifference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetUnionRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetDifference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetDifference
entryRuleEvoSetDifference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetDifferenceRule()); }
	iv_ruleEvoSetDifference=ruleEvoSetDifference
	{ $current=$iv_ruleEvoSetDifference.current; }
	EOF;

// Rule EvoSetDifference
ruleEvoSetDifference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetDifferenceAccess().getEvoSetSymmetricDifferenceParserRuleCall_0());
		}
		this_EvoSetSymmetricDifference_0=ruleEvoSetSymmetricDifference
		{
			$current = $this_EvoSetSymmetricDifference_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetDifferenceAccess().getEvoSetDifferenceOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='difference'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetDifferenceAccess().getDifferenceKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetDifferenceAccess().getOperand2EvoSetSymmetricDifferenceParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetSymmetricDifference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetDifferenceRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetSymmetricDifference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetSymmetricDifference
entryRuleEvoSetSymmetricDifference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetSymmetricDifferenceRule()); }
	iv_ruleEvoSetSymmetricDifference=ruleEvoSetSymmetricDifference
	{ $current=$iv_ruleEvoSetSymmetricDifference.current; }
	EOF;

// Rule EvoSetSymmetricDifference
ruleEvoSetSymmetricDifference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetSymmetricDifferenceAccess().getEvoSetCartesianProductParserRuleCall_0());
		}
		this_EvoSetCartesianProduct_0=ruleEvoSetCartesianProduct
		{
			$current = $this_EvoSetCartesianProduct_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetSymmetricDifferenceAccess().getEvoSetSymmetricDifferenceOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='symmetric_difference'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetSymmetricDifferenceAccess().getSymmetric_differenceKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetSymmetricDifferenceAccess().getOperand2EvoSetCartesianProductParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoSetCartesianProduct
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetSymmetricDifferenceRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetCartesianProduct");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoSetCartesianProduct
entryRuleEvoSetCartesianProduct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetCartesianProductRule()); }
	iv_ruleEvoSetCartesianProduct=ruleEvoSetCartesianProduct
	{ $current=$iv_ruleEvoSetCartesianProduct.current; }
	EOF;

// Rule EvoSetCartesianProduct
ruleEvoSetCartesianProduct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetCartesianProductAccess().getEvoElementOfParserRuleCall_0());
		}
		this_EvoElementOf_0=ruleEvoElementOf
		{
			$current = $this_EvoElementOf_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEvoSetCartesianProductAccess().getEvoSetCartesianProductOperand1Action_1_0(),
						$current);
				}
			)
			otherlv_2='x'
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetCartesianProductAccess().getXKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetCartesianProductAccess().getOperand2EvoElementOfParserRuleCall_1_2_0());
					}
					lv_operand2_3_0=ruleEvoElementOf
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetCartesianProductRule());
						}
						set(
							$current,
							"operand2",
							lv_operand2_3_0,
							"de.evorepair.feature.expression.ExpressionDsl.EvoElementOf");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvoFeatureVariable
entryRuleEvoFeatureVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoFeatureVariableRule()); }
	iv_ruleEvoFeatureVariable=ruleEvoFeatureVariable
	{ $current=$iv_ruleEvoFeatureVariable.current; }
	EOF;

// Rule EvoFeatureVariable
ruleEvoFeatureVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='feature'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoFeatureVariableAccess().getFeatureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEvoFeatureVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoFeatureVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEvoNot
entryRuleEvoNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoNotRule()); }
	iv_ruleEvoNot=ruleEvoNot
	{ $current=$iv_ruleEvoNot.current; }
	EOF;

// Rule EvoNot
ruleEvoNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='not'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoNotAccess().getNotKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoNotAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoNotAccess().getOperandEvoExpressionParserRuleCall_2_0());
				}
				lv_operand_2_0=ruleEvoExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoNotRule());
					}
					set(
						$current,
						"operand",
						lv_operand_2_0,
						"de.evorepair.feature.expression.ExpressionDsl.EvoExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoNotAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoSize
entryRuleEvoSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSizeRule()); }
	iv_ruleEvoSize=ruleEvoSize
	{ $current=$iv_ruleEvoSize.current; }
	EOF;

// Rule EvoSize
ruleEvoSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvoSizeAccess().getEvoSizeAction_0(),
					$current);
			}
		)
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getEvoSizeAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoSizeRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleEvoVariableTerm
entryRuleEvoVariableTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoVariableTermRule()); }
	iv_ruleEvoVariableTerm=ruleEvoVariableTerm
	{ $current=$iv_ruleEvoVariableTerm.current; }
	EOF;

// Rule EvoVariableTerm
ruleEvoVariableTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoVariableTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoVariableTermAccess().getVariableEvoVariableCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoVariableTermAccess().getTypeEvoVariableTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleEvoVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoVariableTermRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEvoApplicationConstraintTerm
entryRuleEvoApplicationConstraintTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoApplicationConstraintTermRule()); }
	iv_ruleEvoApplicationConstraintTerm=ruleEvoApplicationConstraintTerm
	{ $current=$iv_ruleEvoApplicationConstraintTerm.current; }
	EOF;

// Rule EvoApplicationConstraintTerm
ruleEvoApplicationConstraintTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AC'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoApplicationConstraintTermAccess().getACKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEvoApplicationConstraintTermAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoApplicationConstraintTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoApplicationConstraintTermAccess().getVariableEvoMappingVariableCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvoApplicationConstraintTermAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoGroupTerm
entryRuleEvoGroupTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoGroupTermRule()); }
	iv_ruleEvoGroupTerm=ruleEvoGroupTerm
	{ $current=$iv_ruleEvoGroupTerm.current; }
	EOF;

// Rule EvoGroupTerm
ruleEvoGroupTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvoGroupTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvoGroupTermAccess().getVariableEvoGroupVariableCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoGroupTermAccess().getTypeEvoVariableTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleEvoVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoGroupTermRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.evorepair.logic.EvoLogicDsl.EvoVariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEvoSetTerm
entryRuleEvoSetTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetTermRule()); }
	iv_ruleEvoSetTerm=ruleEvoSetTerm
	{ $current=$iv_ruleEvoSetTerm.current; }
	EOF;

// Rule EvoSetTerm
ruleEvoSetTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvoSetTermAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvoSetTermAccess().getVariablesEvoSetVariableParserRuleCall_1_0());
				}
				lv_variables_1_0=ruleEvoSetVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvoSetTermRule());
					}
					add(
						$current,
						"variables",
						lv_variables_1_0,
						"de.evorepair.logic.EvoLogicDsl.EvoSetVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getEvoSetTermAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvoSetTermAccess().getVariablesEvoSetVariableParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleEvoSetVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvoSetTermRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"de.evorepair.logic.EvoLogicDsl.EvoSetVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEvoSetTermAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEvoSetVariable
entryRuleEvoSetVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvoSetVariableRule()); }
	iv_ruleEvoSetVariable=ruleEvoSetVariable
	{ $current=$iv_ruleEvoSetVariable.current; }
	EOF;

// Rule EvoSetVariable
ruleEvoSetVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvoSetVariableAccess().getEvoVariableTermParserRuleCall_0());
		}
		this_EvoVariableTerm_0=ruleEvoVariableTerm
		{
			$current = $this_EvoVariableTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoSetVariableAccess().getEvoSetTermParserRuleCall_1());
		}
		this_EvoSetTerm_1=ruleEvoSetTerm
		{
			$current = $this_EvoSetTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvoSetVariableAccess().getEvoNotParserRuleCall_2());
		}
		this_EvoNot_2=ruleEvoNot
		{
			$current = $this_EvoNot_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Rule EvoRelativeVersionRestrictionOperator
ruleEvoRelativeVersionRestrictionOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getLessThanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getLessThanEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getLessThanOrEqualEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getLessThanOrEqualEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='='
			{
				$current = grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getEqualEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>='
			{
				$current = grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getGreaterThanOrEqualEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getGreaterThanOrEqualEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>'
			{
				$current = grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getGreaterThanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEvoRelativeVersionRestrictionOperatorAccess().getGreaterThanEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule EvoVariableType
ruleEvoVariableType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='@ident'
			{
				$current = grammarAccess.getEvoVariableTypeAccess().getEvoIdentifierEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEvoVariableTypeAccess().getEvoIdentifierEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='@pre'
			{
				$current = grammarAccess.getEvoVariableTypeAccess().getEvoSourceEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEvoVariableTypeAccess().getEvoSourceEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='@post'
			{
				$current = grammarAccess.getEvoVariableTypeAccess().getEvoTargetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEvoVariableTypeAccess().getEvoTargetEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule HyFeatureTypeEnum
ruleHyFeatureTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='optional'
			{
				$current = grammarAccess.getHyFeatureTypeEnumAccess().getOPTIONALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHyFeatureTypeEnumAccess().getOPTIONALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='mandatory'
			{
				$current = grammarAccess.getHyFeatureTypeEnumAccess().getMANDATORYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHyFeatureTypeEnumAccess().getMANDATORYEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule HyGroupTypeEnum
ruleHyGroupTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='and'
			{
				$current = grammarAccess.getHyGroupTypeEnumAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHyGroupTypeEnumAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='or'
			{
				$current = grammarAccess.getHyGroupTypeEnumAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHyGroupTypeEnumAccess().getOREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='alternative'
			{
				$current = grammarAccess.getHyGroupTypeEnumAccess().getALTERNATIVEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHyGroupTypeEnumAccess().getALTERNATIVEEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DATE : '0'..'9' '/' ('0'|'1') '0'..'9' '/' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
