grammar de.evorepair.evolution.variable.EvoVariableDsl with org.eclipse.xtext.common.Terminals

generate evoVariableDsl "http://www.evorepair.de/evolution/variable/EvoVariableDsl"

import "http://darwinspl.de/evorepair/variable/0.2" as evo_variable
import "http://hyvar-project.eu/feature/1.0" as feature


EvoVariableModel:
	variables+=EvoVariable*;

EvoVariable returns evo_variable::EvoVariable:
	EvoConfigurationVariable | EvoFeatureVariable | EvoGroupVariable | EvoSetVariable | EvoMappingVariable;


EvoFeatureVariable returns evo_variable::EvoFeatureVariable: 
	'feature' name=ID (relation=EvoFeatureRelation)? ('(' 'reference' ':' feature=[feature::HyFeature | STRING] ')')?;

EvoFeatureRelation returns evo_variable::EvoFeatureRelation:
	featureType=EvoFeatureVariableType '(' relatedFeatures+=[evo_variable::EvoFeatureVariable] (',' relatedFeatures+=[evo_variable::EvoFeatureVariable])? ')';

EvoGroupVariable returns evo_variable::EvoGroupVariable:
	'group' name=ID ('value' '=' group=[feature::HyGroup | STRING])?;

EvoSetVariable returns evo_variable::EvoSetVariable: 
	'set' name=ID ('(' elements+=[evo_variable::EvoVariable] (',' elements+=[evo_variable::EvoVariable]) ')')?;

EvoMappingVariable returns evo_variable::EvoMappingVariable:
	'mapping' name=ID ('(' mapping=STRING ')')?;

EvoConfigurationVariable returns evo_variable::EvoConfigurationVariable:
	'configuration' name=ID ('(' configuration=STRING ')')?;

enum EvoFeatureVariableType returns evo_variable::EvoFeatureVariableType:
	EvoParent = 'parentOf' |
	EvoSibling = 'siblingOf' |
	EvoChild = 'childOf';
