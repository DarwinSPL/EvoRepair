/**
 */
package de.evorepair.logic.evofirstorderlogic.provider;

import de.evorepair.logic.evofirstorderlogic.util.EvoFirstOrderLogicAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EvoFirstOrderLogicItemProviderAdapterFactory extends EvoFirstOrderLogicAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable
{
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EvoFirstOrderLogicItemProviderAdapterFactory()
	{
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoAnd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoAndItemProvider evoAndItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoAnd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoAndAdapter()
	{
		if (evoAndItemProvider == null)
		{
			evoAndItemProvider = new EvoAndItemProvider(this);
		}

		return evoAndItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoOr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoOrItemProvider evoOrItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoOr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoOrAdapter()
	{
		if (evoOrItemProvider == null)
		{
			evoOrItemProvider = new EvoOrItemProvider(this);
		}

		return evoOrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoXOr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoXOrItemProvider evoXOrItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoXOr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoXOrAdapter()
	{
		if (evoXOrItemProvider == null)
		{
			evoXOrItemProvider = new EvoXOrItemProvider(this);
		}

		return evoXOrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoNot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoNotItemProvider evoNotItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoNot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoNotAdapter()
	{
		if (evoNotItemProvider == null)
		{
			evoNotItemProvider = new EvoNotItemProvider(this);
		}

		return evoNotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoEqual} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoEqualItemProvider evoEqualItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoEqual}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoEqualAdapter()
	{
		if (evoEqualItemProvider == null)
		{
			evoEqualItemProvider = new EvoEqualItemProvider(this);
		}

		return evoEqualItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoUnequal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoUnequalItemProvider evoUnequalItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoUnequal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoUnequalAdapter()
	{
		if (evoUnequalItemProvider == null)
		{
			evoUnequalItemProvider = new EvoUnequalItemProvider(this);
		}

		return evoUnequalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoImplication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoImplicationItemProvider evoImplicationItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoImplication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoImplicationAdapter()
	{
		if (evoImplicationItemProvider == null)
		{
			evoImplicationItemProvider = new EvoImplicationItemProvider(this);
		}

		return evoImplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoBiconditional} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoBiconditionalItemProvider evoBiconditionalItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoBiconditional}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoBiconditionalAdapter()
	{
		if (evoBiconditionalItemProvider == null)
		{
			evoBiconditionalItemProvider = new EvoBiconditionalItemProvider(this);
		}

		return evoBiconditionalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetInclusion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetInclusionItemProvider evoSetInclusionItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetInclusion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetInclusionAdapter()
	{
		if (evoSetInclusionItemProvider == null)
		{
			evoSetInclusionItemProvider = new EvoSetInclusionItemProvider(this);
		}

		return evoSetInclusionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetIntersection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetIntersectionItemProvider evoSetIntersectionItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetIntersection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetIntersectionAdapter()
	{
		if (evoSetIntersectionItemProvider == null)
		{
			evoSetIntersectionItemProvider = new EvoSetIntersectionItemProvider(this);
		}

		return evoSetIntersectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetUnion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetUnionItemProvider evoSetUnionItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetUnion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetUnionAdapter()
	{
		if (evoSetUnionItemProvider == null)
		{
			evoSetUnionItemProvider = new EvoSetUnionItemProvider(this);
		}

		return evoSetUnionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetDifference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetDifferenceItemProvider evoSetDifferenceItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetDifference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetDifferenceAdapter()
	{
		if (evoSetDifferenceItemProvider == null)
		{
			evoSetDifferenceItemProvider = new EvoSetDifferenceItemProvider(this);
		}

		return evoSetDifferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetSymmetricDifference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetSymmetricDifferenceItemProvider evoSetSymmetricDifferenceItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetSymmetricDifference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetSymmetricDifferenceAdapter()
	{
		if (evoSetSymmetricDifferenceItemProvider == null)
		{
			evoSetSymmetricDifferenceItemProvider = new EvoSetSymmetricDifferenceItemProvider(this);
		}

		return evoSetSymmetricDifferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetCartesianProduct} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetCartesianProductItemProvider evoSetCartesianProductItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetCartesianProduct}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetCartesianProductAdapter()
	{
		if (evoSetCartesianProductItemProvider == null)
		{
			evoSetCartesianProductItemProvider = new EvoSetCartesianProductItemProvider(this);
		}

		return evoSetCartesianProductItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetCardinality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetCardinalityItemProvider evoSetCardinalityItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetCardinality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetCardinalityAdapter()
	{
		if (evoSetCardinalityItemProvider == null)
		{
			evoSetCardinalityItemProvider = new EvoSetCardinalityItemProvider(this);
		}

		return evoSetCardinalityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetElementOf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetElementOfItemProvider evoSetElementOfItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetElementOf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetElementOfAdapter()
	{
		if (evoSetElementOfItemProvider == null)
		{
			evoSetElementOfItemProvider = new EvoSetElementOfItemProvider(this);
		}

		return evoSetElementOfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSetNotElementOf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSetNotElementOfItemProvider evoSetNotElementOfItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSetNotElementOf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSetNotElementOfAdapter()
	{
		if (evoSetNotElementOfItemProvider == null)
		{
			evoSetNotElementOfItemProvider = new EvoSetNotElementOfItemProvider(this);
		}

		return evoSetNotElementOfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoForAll} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoForAllItemProvider evoForAllItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoForAll}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoForAllAdapter()
	{
		if (evoForAllItemProvider == null)
		{
			evoForAllItemProvider = new EvoForAllItemProvider(this);
		}

		return evoForAllItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoExist} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoExistItemProvider evoExistItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoExist}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoExistAdapter()
	{
		if (evoExistItemProvider == null)
		{
			evoExistItemProvider = new EvoExistItemProvider(this);
		}

		return evoExistItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoUniqueExists} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoUniqueExistsItemProvider evoUniqueExistsItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoUniqueExists}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoUniqueExistsAdapter()
	{
		if (evoUniqueExistsItemProvider == null)
		{
			evoUniqueExistsItemProvider = new EvoUniqueExistsItemProvider(this);
		}

		return evoUniqueExistsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoFormula} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoFormulaItemProvider evoFormulaItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoFormula}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoFormulaAdapter()
	{
		if (evoFormulaItemProvider == null)
		{
			evoFormulaItemProvider = new EvoFormulaItemProvider(this);
		}

		return evoFormulaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoVariableTerm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoVariableTermItemProvider evoVariableTermItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoVariableTerm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoVariableTermAdapter()
	{
		if (evoVariableTermItemProvider == null)
		{
			evoVariableTermItemProvider = new EvoVariableTermItemProvider(this);
		}

		return evoVariableTermItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoApplicationConstraintVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoApplicationConstraintVariableItemProvider evoApplicationConstraintVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoApplicationConstraintVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoApplicationConstraintVariableAdapter()
	{
		if (evoApplicationConstraintVariableItemProvider == null)
		{
			evoApplicationConstraintVariableItemProvider = new EvoApplicationConstraintVariableItemProvider(this);
		}

		return evoApplicationConstraintVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoFeatureModelConstraintVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoFeatureModelConstraintVariableItemProvider evoFeatureModelConstraintVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoFeatureModelConstraintVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoFeatureModelConstraintVariableAdapter()
	{
		if (evoFeatureModelConstraintVariableItemProvider == null)
		{
			evoFeatureModelConstraintVariableItemProvider = new EvoFeatureModelConstraintVariableItemProvider(this);
		}

		return evoFeatureModelConstraintVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoPredefinedVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoPredefinedVariableItemProvider evoPredefinedVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoPredefinedVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoPredefinedVariableAdapter()
	{
		if (evoPredefinedVariableItemProvider == null)
		{
			evoPredefinedVariableItemProvider = new EvoPredefinedVariableItemProvider(this);
		}

		return evoPredefinedVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoAllFeaturesVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoAllFeaturesVariableItemProvider evoAllFeaturesVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoAllFeaturesVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoAllFeaturesVariableAdapter()
	{
		if (evoAllFeaturesVariableItemProvider == null)
		{
			evoAllFeaturesVariableItemProvider = new EvoAllFeaturesVariableItemProvider(this);
		}

		return evoAllFeaturesVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoAllValidConfigurationsVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoAllValidConfigurationsVariableItemProvider evoAllValidConfigurationsVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoAllValidConfigurationsVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoAllValidConfigurationsVariableAdapter()
	{
		if (evoAllValidConfigurationsVariableItemProvider == null)
		{
			evoAllValidConfigurationsVariableItemProvider = new EvoAllValidConfigurationsVariableItemProvider(this);
		}

		return evoAllValidConfigurationsVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoAllMappingsVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoAllMappingsVariableItemProvider evoAllMappingsVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoAllMappingsVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoAllMappingsVariableAdapter()
	{
		if (evoAllMappingsVariableItemProvider == null)
		{
			evoAllMappingsVariableItemProvider = new EvoAllMappingsVariableItemProvider(this);
		}

		return evoAllMappingsVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoMappingAssociatedAssetsVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoMappingAssociatedAssetsVariableItemProvider evoMappingAssociatedAssetsVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoMappingAssociatedAssetsVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoMappingAssociatedAssetsVariableAdapter()
	{
		if (evoMappingAssociatedAssetsVariableItemProvider == null)
		{
			evoMappingAssociatedAssetsVariableItemProvider = new EvoMappingAssociatedAssetsVariableItemProvider(this);
		}

		return evoMappingAssociatedAssetsVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoMappingVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoMappingVariableItemProvider evoMappingVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoMappingVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoMappingVariableAdapter()
	{
		if (evoMappingVariableItemProvider == null)
		{
			evoMappingVariableItemProvider = new EvoMappingVariableItemProvider(this);
		}

		return evoMappingVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoInvolvedFeatureVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoInvolvedFeatureVariableItemProvider evoInvolvedFeatureVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoInvolvedFeatureVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoInvolvedFeatureVariableAdapter()
	{
		if (evoInvolvedFeatureVariableItemProvider == null)
		{
			evoInvolvedFeatureVariableItemProvider = new EvoInvolvedFeatureVariableItemProvider(this);
		}

		return evoInvolvedFeatureVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoRequirementVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoRequirementVariableItemProvider evoRequirementVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoRequirementVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoRequirementVariableAdapter()
	{
		if (evoRequirementVariableItemProvider == null)
		{
			evoRequirementVariableItemProvider = new EvoRequirementVariableItemProvider(this);
		}

		return evoRequirementVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoEmpty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoEmptyItemProvider evoEmptyItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoEmpty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoEmptyAdapter()
	{
		if (evoEmptyItemProvider == null)
		{
			evoEmptyItemProvider = new EvoEmptyItemProvider(this);
		}

		return evoEmptyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoGroupType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoGroupTypeItemProvider evoGroupTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoGroupType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoGroupTypeAdapter()
	{
		if (evoGroupTypeItemProvider == null)
		{
			evoGroupTypeItemProvider = new EvoGroupTypeItemProvider(this);
		}

		return evoGroupTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoFeatureType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoFeatureTypeItemProvider evoFeatureTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoFeatureType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoFeatureTypeAdapter()
	{
		if (evoFeatureTypeItemProvider == null)
		{
			evoFeatureTypeItemProvider = new EvoFeatureTypeItemProvider(this);
		}

		return evoFeatureTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoEvolutionTerm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoEvolutionTermItemProvider evoEvolutionTermItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoEvolutionTerm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoEvolutionTermAdapter()
	{
		if (evoEvolutionTermItemProvider == null)
		{
			evoEvolutionTermItemProvider = new EvoEvolutionTermItemProvider(this);
		}

		return evoEvolutionTermItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSiblings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSiblingsItemProvider evoSiblingsItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSiblings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSiblingsAdapter()
	{
		if (evoSiblingsItemProvider == null)
		{
			evoSiblingsItemProvider = new EvoSiblingsItemProvider(this);
		}

		return evoSiblingsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.evorepair.logic.evofirstorderlogic.EvoSatisfiable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvoSatisfiableItemProvider evoSatisfiableItemProvider;

	/**
	 * This creates an adapter for a {@link de.evorepair.logic.evofirstorderlogic.EvoSatisfiable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvoSatisfiableAdapter()
	{
		if (evoSatisfiableItemProvider == null)
		{
			evoSatisfiableItemProvider = new EvoSatisfiableItemProvider(this);
		}

		return evoSatisfiableItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory()
	{
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory)
	{
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type)
	{
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type)
	{
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type)
	{
		if (isFactoryForType(type))
		{
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter)))
			{
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener)
	{
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener)
	{
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification)
	{
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null)
		{
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose()
	{
		if (evoAndItemProvider != null) evoAndItemProvider.dispose();
		if (evoOrItemProvider != null) evoOrItemProvider.dispose();
		if (evoXOrItemProvider != null) evoXOrItemProvider.dispose();
		if (evoNotItemProvider != null) evoNotItemProvider.dispose();
		if (evoEqualItemProvider != null) evoEqualItemProvider.dispose();
		if (evoUnequalItemProvider != null) evoUnequalItemProvider.dispose();
		if (evoImplicationItemProvider != null) evoImplicationItemProvider.dispose();
		if (evoBiconditionalItemProvider != null) evoBiconditionalItemProvider.dispose();
		if (evoSetInclusionItemProvider != null) evoSetInclusionItemProvider.dispose();
		if (evoSetIntersectionItemProvider != null) evoSetIntersectionItemProvider.dispose();
		if (evoSetUnionItemProvider != null) evoSetUnionItemProvider.dispose();
		if (evoSetDifferenceItemProvider != null) evoSetDifferenceItemProvider.dispose();
		if (evoSetSymmetricDifferenceItemProvider != null) evoSetSymmetricDifferenceItemProvider.dispose();
		if (evoSetCartesianProductItemProvider != null) evoSetCartesianProductItemProvider.dispose();
		if (evoSetCardinalityItemProvider != null) evoSetCardinalityItemProvider.dispose();
		if (evoSetElementOfItemProvider != null) evoSetElementOfItemProvider.dispose();
		if (evoSetNotElementOfItemProvider != null) evoSetNotElementOfItemProvider.dispose();
		if (evoForAllItemProvider != null) evoForAllItemProvider.dispose();
		if (evoExistItemProvider != null) evoExistItemProvider.dispose();
		if (evoUniqueExistsItemProvider != null) evoUniqueExistsItemProvider.dispose();
		if (evoFormulaItemProvider != null) evoFormulaItemProvider.dispose();
		if (evoVariableTermItemProvider != null) evoVariableTermItemProvider.dispose();
		if (evoApplicationConstraintVariableItemProvider != null) evoApplicationConstraintVariableItemProvider.dispose();
		if (evoFeatureModelConstraintVariableItemProvider != null) evoFeatureModelConstraintVariableItemProvider.dispose();
		if (evoPredefinedVariableItemProvider != null) evoPredefinedVariableItemProvider.dispose();
		if (evoAllFeaturesVariableItemProvider != null) evoAllFeaturesVariableItemProvider.dispose();
		if (evoAllValidConfigurationsVariableItemProvider != null) evoAllValidConfigurationsVariableItemProvider.dispose();
		if (evoAllMappingsVariableItemProvider != null) evoAllMappingsVariableItemProvider.dispose();
		if (evoMappingAssociatedAssetsVariableItemProvider != null) evoMappingAssociatedAssetsVariableItemProvider.dispose();
		if (evoMappingVariableItemProvider != null) evoMappingVariableItemProvider.dispose();
		if (evoInvolvedFeatureVariableItemProvider != null) evoInvolvedFeatureVariableItemProvider.dispose();
		if (evoRequirementVariableItemProvider != null) evoRequirementVariableItemProvider.dispose();
		if (evoEmptyItemProvider != null) evoEmptyItemProvider.dispose();
		if (evoGroupTypeItemProvider != null) evoGroupTypeItemProvider.dispose();
		if (evoFeatureTypeItemProvider != null) evoFeatureTypeItemProvider.dispose();
		if (evoEvolutionTermItemProvider != null) evoEvolutionTermItemProvider.dispose();
		if (evoSiblingsItemProvider != null) evoSiblingsItemProvider.dispose();
		if (evoSatisfiableItemProvider != null) evoSatisfiableItemProvider.dispose();
	}

}
